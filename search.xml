<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Django项目搭建</title>
    <url>/2020/07/26/Django%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA%E5%8F%8A%E9%94%99%E8%AF%AF%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<p>Django项目搭建</p>
 <span id="more"></span>
<h2 id="配置依赖"><a href="#配置依赖" class="headerlink" title="配置依赖"></a>配置依赖</h2><p>先配置python，然后根据报错提示（最上方）下载全部依赖。会有报错，未成功下载的依赖。将依赖搜索后下载，一般情况下全成功。<br>下载选项位置如图：<br><img src="https://img-blog.csdnimg.cn/20200726171739547.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dUWXVvbmc=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/20200726171714648.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dUWXVvbmc=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="搭建Django"><a href="#搭建Django" class="headerlink" title="搭建Django"></a>搭建Django</h2><p><img src="https://img-blog.csdnimg.cn/20200726171055536.png" alt="在这里插入图片描述"><br>点击后发现error，点击右下方的fixed，进入如下页面，配置Django<br><img src="https://img-blog.csdnimg.cn/20200726171350500.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dUWXVvbmc=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="数据库设置"><a href="#数据库设置" class="headerlink" title="数据库设置"></a>数据库设置</h2><p>数据库文件在settings.py文件中，将对应name等进行更改<br><img src="https://img-blog.csdnimg.cn/20200726172251187.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dUWXVvbmc=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="cnpm下载"><a href="#cnpm下载" class="headerlink" title="cnpm下载"></a>cnpm下载</h2><p>在文件 /frontend&gt; cmd下执行<br>cnpm -v #查看状态（在此之前，于官网下载nodejs，将npm镜像淘宝地址配置成功）<br>cnpm install #下载</p>
<p>一共42个包，在第13个时会卡一会，不慌。成功后，有个√<br>关于错误：<br>①不是内部或外部命令<br>1）nodejs环境变量配置错误<br>2）命令输错了（注意，是cnpm）<br>3）Data数据包中有数据，不能为空</p>
<h2 id="数据库连接"><a href="#数据库连接" class="headerlink" title="数据库连接"></a>数据库连接</h2><p>1）任务管理器打开—》服务—》MySQL57—》右键运行<br>2）开始，MySQL，连接，输密码<br><img src="https://img-blog.csdnimg.cn/2020072617332153.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dUWXVvbmc=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>3）本机Navicat连接<br>连接后先建库，然后表右键运行.sql文件<br>导入.sql文件时报错，438数据成功400个<br>不勾选第二个，成功<img src="https://img-blog.csdnimg.cn/20200726174124801.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dUWXVvbmc=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200726174212330.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dUWXVvbmc=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="项目跑起来"><a href="#项目跑起来" class="headerlink" title="项目跑起来"></a>项目跑起来</h2><p>npm run dev<br>①在pycharm里面输入<img src="https://img-blog.csdnimg.cn/20200726175944461.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dUWXVvbmc=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>②在项目cmd中输入<br>pycharm可能会带不动，很容易卡死</p>
]]></content>
      <categories>
        <category>项目</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>Django</tag>
      </tags>
  </entry>
  <entry>
    <title>Hadoop大数据行业部署实战</title>
    <url>/2020/12/22/Hadoop%E5%A4%A7%E6%95%B0%E6%8D%AE%E8%A1%8C%E4%B8%9A%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98/</url>
    <content><![CDATA[<p>大数据行业部署实战</p>
 <span id="more"></span>
<h1 id="实验目的"><a href="#实验目的" class="headerlink" title="实验目的"></a>实验目的</h1><p>1． 学会分析环境数据文件；<br>2． 学会编写解析环境数据文件并进行统计的代码；<br>3． 学会进行递归MapReduce。</p>
<h1 id="实验要求"><a href="#实验要求" class="headerlink" title="实验要求"></a>实验要求</h1><pre><code>要求实验结束时，每位学生均已在服务器上运行从北京2016年1月到6月这半年间的历史天气和空气质量数据文件中分析出的环境统计结果，包含月平均气温、空气质量分布情况等。
</code></pre><h2 id="实验原理"><a href="#实验原理" class="headerlink" title="实验原理"></a>实验原理</h2><pre><code>近年来，由于雾霾问题的持续发酵，越来越多的人开始关注城市相关的环境数据，包括空气质量数据、天气数据等等。
如果每小时记录一次城市的天气实况和空气质量实况信息，则每个城市每天都会产生24条环境数据，全国所有2500多个城市如果均如此进行记录，那每天产生的数据量将达到6万多条，每年则会产生2190万条记录，已经可以称得上环境大数据。
对于这些原始监测数据，我们可以根据时间的维度来进行统计，从而得出与该城市相关的日度及月度平均气温、空气质量优良及污染天数等等，从而为研究空气污染物扩散条件提供有力的数据支持。
本实验中选取了北京2016年1月到6月这半年间的每小时天气和空气质量数据（未取到数据的字段填充“N/A”），利用MapReduce来统计月度平均气温和半年内空气质量为优、良、轻度污染、中度污染、重度污染和严重污染的天数。
</code></pre><h1 id="实验步骤"><a href="#实验步骤" class="headerlink" title="实验步骤"></a>实验步骤</h1><h2 id="1、-分析数据文件"><a href="#1、-分析数据文件" class="headerlink" title="1、 分析数据文件"></a>1、 分析数据文件</h2><p>打开terminal，在家目录下，下载并查看环境数据文件beijing.txt<br>wget <a href="http://i9000.net:8888/sgn/HUP/HadoopDeployPro/beijing.txt">http://i9000.net:8888/sgn/HUP/HadoopDeployPro/beijing.txt</a><br>查看前20行数据<br>head -20 beijing.txt<br><img src="https://img-blog.csdnimg.cn/20201222153631417.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dUWXVvbmc=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>图1环境数据文件格式可以看到，我们需要关心的数据有第一列DATE、第二列HOUR、第六列TMP和第七列AQI。</p>
<h2 id="2、-将数据文件上传至HDFS"><a href="#2、-将数据文件上传至HDFS" class="headerlink" title="2、 将数据文件上传至HDFS"></a>2、 将数据文件上传至HDFS</h2><p>将家目录下数据beijing.txt上传到HDFS的/input目录上。<br>hadoop fs -mkdir /input<br>hadoop fs -put ~/beijing.txt /input</p>
<h2 id="3-、编写月平均气温统计程序"><a href="#3-、编写月平均气温统计程序" class="headerlink" title="3 、编写月平均气温统计程序"></a>3 、编写月平均气温统计程序</h2><p>打开eclipse——Window——preferences,选择Hadoop的安装目录如下图，点击apply and close<br><img src="https://img-blog.csdnimg.cn/20201222153642929.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dUWXVvbmc=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201222153702224.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dUWXVvbmc=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>在Eclipse上新建MapReduce项目，命名为TmpStat，在src目录下新建文件 TmpStat.java，并键入如下代码。<br><img src="https://img-blog.csdnimg.cn/20201222153713922.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dUWXVvbmc=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201222153725724.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dUWXVvbmc=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201222153732844.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dUWXVvbmc=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2020122215374294.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dUWXVvbmc=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201222153749234.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dUWXVvbmc=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.conf.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.fs.Path;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.IntWritable;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.Text;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Job;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Mapper;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Reducer;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.lib.input.TextInputFormat;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.lib.output.TextOutputFormat;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.lib.partition.HashPartitioner;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TmpStat</span></span></span><br><span class="line"><span class="class"></span>&#123;                                                                                 </span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">StatMapper</span> <span class="keyword">extends</span> <span class="title">Mapper</span>&lt;<span class="title">Object</span>, <span class="title">Text</span>, <span class="title">Text</span>, <span class="title">IntWritable</span>&gt;</span></span><br><span class="line"><span class="class">  </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> IntWritable intValue = <span class="keyword">new</span> IntWritable();</span><br><span class="line">    <span class="keyword">private</span> Text dateKey = <span class="keyword">new</span> Text();</span><br><span class="line">       </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">map</span><span class="params">(Object key, Text value, Context context)</span></span></span><br><span class="line"><span class="function">          <span class="keyword">throws</span> IOException, InterruptedException</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">      String[] items = value.toString().split(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">                                                                            </span><br><span class="line">      String date = items[<span class="number">0</span>];</span><br><span class="line">      String tmp = items[<span class="number">5</span>];</span><br><span class="line">                                                                           </span><br><span class="line">      <span class="keyword">if</span>(!<span class="string">&quot;DATE&quot;</span>.equals(date) &amp;&amp; !<span class="string">&quot;N/A&quot;</span>.equals(tmp))</span><br><span class="line">      &#123;<span class="comment">//排除第一行说明以及未取到数据的行</span></span><br><span class="line">        dateKey.set(date.substring(<span class="number">0</span>, <span class="number">6</span>));</span><br><span class="line">        intValue.set(Integer.parseInt(tmp));</span><br><span class="line">        context.write(dateKey, intValue);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">StatReducer</span> <span class="keyword">extends</span> <span class="title">Reducer</span>&lt;<span class="title">Text</span>, <span class="title">IntWritable</span>, <span class="title">Text</span>, <span class="title">IntWritable</span>&gt;</span></span><br><span class="line"><span class="class">                                                                                   </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> IntWritable result = <span class="keyword">new</span> IntWritable();</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">reduce</span><span class="params">(Text key, Iterable&lt;IntWritable&gt; values, Context context)</span></span></span><br><span class="line"><span class="function">          <span class="keyword">throws</span> IOException, InterruptedException</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">      <span class="keyword">int</span> tmp_sum = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">                                                                           </span><br><span class="line">      <span class="keyword">for</span>(IntWritable val : values)</span><br><span class="line">      &#123;</span><br><span class="line">        tmp_sum += val.get();</span><br><span class="line">        count++;</span><br><span class="line">      &#125;</span><br><span class="line">                                                                           </span><br><span class="line">      <span class="keyword">int</span> tmp_avg = tmp_sum/count;</span><br><span class="line">      result.set(tmp_avg);</span><br><span class="line">      context.write(key, result);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span></span></span><br><span class="line"><span class="function">        <span class="keyword">throws</span> IOException, ClassNotFoundException, InterruptedException</span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">      Configuration conf = <span class="keyword">new</span> Configuration();  </span><br><span class="line">    Job job = Job.getInstance(conf, <span class="string">&quot;MonthlyAvgTmpStat&quot;</span>);           </span><br><span class="line">    job.setInputFormatClass(TextInputFormat.class);</span><br><span class="line">    TextInputFormat.setInputPaths(job, args[<span class="number">0</span>]);  </span><br><span class="line">    job.setJarByClass(TmpStat.class);             </span><br><span class="line">    job.setMapperClass(StatMapper.class);           </span><br><span class="line">    job.setMapOutputKeyClass(Text.class);         </span><br><span class="line">    job.setMapOutputValueClass(IntWritable.class);</span><br><span class="line">    job.setPartitionerClass(HashPartitioner.class);</span><br><span class="line">    job.setReducerClass(StatReducer.class);</span><br><span class="line">    job.setNumReduceTasks(Integer.parseInt(args[<span class="number">2</span>]));</span><br><span class="line">    job.setOutputKeyClass(Text.class);              </span><br><span class="line">    job.setOutputValueClass(IntWritable.class);            </span><br><span class="line">    job.setOutputFormatClass(TextOutputFormat.class);</span><br><span class="line">    TextOutputFormat.setOutputPath(job, <span class="keyword">new</span> Path(args[<span class="number">1</span>]));</span><br><span class="line">    System.exit(job.waitForCompletion(<span class="keyword">true</span>) ? <span class="number">0</span> : <span class="number">1</span>);   </span><br><span class="line">                                                                                   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>使用Eclipse软件将TmpStat项目导出成Jar文件，指定主类为TmpStat，命名为tmpstat.jar，并保存至家目录下<br><img src="https://img-blog.csdnimg.cn/20201222153807935.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dUWXVvbmc=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201222153815357.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dUWXVvbmc=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="4-、查看月平均气温统计结果"><a href="#4-、查看月平均气温统计结果" class="headerlink" title="4 、查看月平均气温统计结果"></a>4 、查看月平均气温统计结果</h2><p>在client上执行tmpstat.jar，指定输出目录为/monthlyavgtmp，reducer数量为1。如图2所示：<br>cd ~<br>hadoop jar tmpstat.jar TmpStat /input /monthlyavgtmp 1<br><img src="https://img-blog.csdnimg.cn/20201222153826393.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dUWXVvbmc=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>图2 运行tmpstat.jar<br>查看统计结果。如图3所示：<br>hadoop fs -ls /monthlyavgtmp<br>hadoop fs -cat /monthlyavgtmp/part-r-00000<br><img src="https://img-blog.csdnimg.cn/20201222153837992.png" alt="在这里插入图片描述"><br>图3 查看月平均气温统计结果</p>
<h2 id="5、-编写每日空气质量统计程序"><a href="#5、-编写每日空气质量统计程序" class="headerlink" title="5、 编写每日空气质量统计程序"></a>5、 编写每日空气质量统计程序</h2><p>在Eclipse上新建MapReduce项目，命名为AqiStatDaily，在src目录下新建文件 AqiStatDaily.java，并键入如下代码。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.conf.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.fs.Path;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.IntWritable;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.Text;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Job;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Mapper;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Reducer;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.lib.input.TextInputFormat;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.lib.output.TextOutputFormat;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.lib.partition.HashPartitioner;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AqiStatDaily</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">StatMapper</span> <span class="keyword">extends</span> <span class="title">Mapper</span>&lt;<span class="title">Object</span>, <span class="title">Text</span>, <span class="title">Text</span>, <span class="title">IntWritable</span>&gt;</span></span><br><span class="line"><span class="class">  </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> IntWritable intValue = <span class="keyword">new</span> IntWritable();</span><br><span class="line">    <span class="keyword">private</span> Text dateKey = <span class="keyword">new</span> Text();</span><br><span class="line">       </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">map</span><span class="params">(Object key, Text value, Context context)</span></span></span><br><span class="line"><span class="function">          <span class="keyword">throws</span> IOException, InterruptedException</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">      String[] items = value.toString().split(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">                                                                           </span><br><span class="line">      String date = items[<span class="number">0</span>];</span><br><span class="line">      String aqi = items[<span class="number">6</span>];</span><br><span class="line">                                                                           </span><br><span class="line">      <span class="keyword">if</span>(!<span class="string">&quot;DATE&quot;</span>.equals(date) &amp;&amp; !<span class="string">&quot;N/A&quot;</span>.equals(aqi))</span><br><span class="line">      &#123;</span><br><span class="line">        dateKey.set(date);</span><br><span class="line">        intValue.set(Integer.parseInt(aqi));</span><br><span class="line">        context.write(dateKey, intValue);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">StatReducer</span> <span class="keyword">extends</span> <span class="title">Reducer</span>&lt;<span class="title">Text</span>, <span class="title">IntWritable</span>, <span class="title">Text</span>, <span class="title">IntWritable</span>&gt;</span></span><br><span class="line"><span class="class">  </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> IntWritable result = <span class="keyword">new</span> IntWritable();</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">reduce</span><span class="params">(Text key, Iterable&lt;IntWritable&gt; values, Context context)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> IOException, InterruptedException</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">      <span class="keyword">int</span> aqi_sum = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">                                                                           </span><br><span class="line">      <span class="keyword">for</span>(IntWritable val : values)</span><br><span class="line">      &#123;</span><br><span class="line">        aqi_sum += val.get();</span><br><span class="line">        count++;</span><br><span class="line">      &#125;</span><br><span class="line">                                                                           </span><br><span class="line">      <span class="keyword">int</span> aqi_avg = aqi_sum/count;</span><br><span class="line">      result.set(aqi_avg);</span><br><span class="line">      context.write(key, result);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span></span></span><br><span class="line"><span class="function">        <span class="keyword">throws</span> IOException, ClassNotFoundException, InterruptedException</span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    Configuration conf = <span class="keyword">new</span> Configuration();     </span><br><span class="line">    Job job = Job.getInstance(conf, <span class="string">&quot;AqiStatDaily&quot;</span>);           </span><br><span class="line">    job.setInputFormatClass(TextInputFormat.class);</span><br><span class="line">    TextInputFormat.setInputPaths(job, args[<span class="number">0</span>]);  </span><br><span class="line">    job.setJarByClass(AqiStatDaily.class);             </span><br><span class="line">    job.setMapperClass(StatMapper.class);           </span><br><span class="line">    job.setMapOutputKeyClass(Text.class);         </span><br><span class="line">    job.setMapOutputValueClass(IntWritable.class);</span><br><span class="line">    job.setPartitionerClass(HashPartitioner.class);</span><br><span class="line">    job.setReducerClass(StatReducer.class);</span><br><span class="line">    job.setNumReduceTasks(Integer.parseInt(args[<span class="number">2</span>]));</span><br><span class="line">    job.setOutputKeyClass(Text.class);              </span><br><span class="line">    job.setOutputValueClass(IntWritable.class);            </span><br><span class="line">    job.setOutputFormatClass(TextOutputFormat.class);</span><br><span class="line">    TextOutputFormat.setOutputPath(job, <span class="keyword">new</span> Path(args[<span class="number">1</span>]));</span><br><span class="line">    System.exit(job.waitForCompletion(<span class="keyword">true</span>) ? <span class="number">0</span> : <span class="number">1</span>);   </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20201222153851174.png" alt="在这里插入图片描述"><br>使用Eclipse软件将AqiStatDaily项目导出成Jar文件，指定主类为AqiStatDaily，命名为aqistatdaily.jar，并保存在家目录下。</p>
<h2 id="6、-查看每日空气质量统计结果"><a href="#6、-查看每日空气质量统计结果" class="headerlink" title="6、 查看每日空气质量统计结果"></a>6、 查看每日空气质量统计结果</h2><p>在家目录下执行aqistatdaily.jar，指定输出目录为/aqidaily，reducer数量为3。如图4所示：<br>cd ~<br>hadoop jar aqistatdaily.jar AqiStatDaily /input /aqidaily 3<br><img src="https://img-blog.csdnimg.cn/20201222153905695.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dUWXVvbmc=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>图4 运行aqistatdaily.jar<br>查看统计结果文件。如图5所示：<br>hadoop fs -ls /aqidaily<br><img src="https://img-blog.csdnimg.cn/20201222153921546.png" alt="在这里插入图片描述"><br>图5 查看aqistatdaily.jar运行结果文件<br>可以看到，结果文件被分成了3个部分，依次查看这3个文件的内容，即可看到每天的空气质量统计结果数据。如图6所示：<br>hadoop fs -cat /aqidaily/p*<br><img src="https://img-blog.csdnimg.cn/20201222153928817.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dUWXVvbmc=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>图6 查看每日空气质量统计结果</p>
<h2 id="7-、将每日空气质量统计文件进行整合"><a href="#7-、将每日空气质量统计文件进行整合" class="headerlink" title="7 、将每日空气质量统计文件进行整合"></a>7 、将每日空气质量统计文件进行整合</h2><p>将每日空气质量统计结果保存到aqidaily.txt。<br>hadoop fs -cat /aqidaily/part-r-00000 &gt; aqidaily.txt<br>hadoop fs -cat /aqidaily/part-r-00001 &gt;&gt; aqidaily.txt<br>hadoop fs -cat /aqidaily/part-r-00002 &gt;&gt; aqidaily.txt<br><img src="https://img-blog.csdnimg.cn/20201222153939744.png" alt="在这里插入图片描述"><br>cat aqidaily.txt |wc -l</p>
<p>在HDFS上创建/aqiinput目录，并将aqidaily.txt上传至该目录下<br>hadoop fs -mkdir /aqiinput<br>hadoop fs -put aqidaily.txt /aqiinput</p>
<h2 id="8、-编写各空气质量天数统计程序"><a href="#8、-编写各空气质量天数统计程序" class="headerlink" title="8、 编写各空气质量天数统计程序"></a>8、 编写各空气质量天数统计程序</h2><p>在Eclipse上新建MapReduce项目，命名为AqiStat，在src目录下新建文件 AqiStat.java，并键入如下代码。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.conf.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.fs.Path;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.IntWritable;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.Text;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Job;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Mapper;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Reducer;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.lib.input.TextInputFormat;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.lib.output.TextOutputFormat;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.lib.partition.HashPartitioner;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AqiStat</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String GOOD = <span class="string">&quot;优&quot;</span>;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String MODERATE = <span class="string">&quot;良&quot;</span>;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String LIGHTLY_POLLUTED = <span class="string">&quot;轻度污染&quot;</span>;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String MODERATELY_POLLUTED = <span class="string">&quot;中度污染&quot;</span>;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String HEAVILY_POLLUTED = <span class="string">&quot;重度污染&quot;</span>;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String SEVERELY_POLLUTED = <span class="string">&quot;严重污染&quot;</span>;</span><br><span class="line">                                                                                   </span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">StatMapper</span> <span class="keyword">extends</span> <span class="title">Mapper</span>&lt;<span class="title">Object</span>, <span class="title">Text</span>, <span class="title">Text</span>, <span class="title">IntWritable</span>&gt;</span></span><br><span class="line"><span class="class">  </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> IntWritable one = <span class="keyword">new</span> IntWritable(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">private</span> Text cond = <span class="keyword">new</span> Text();</span><br><span class="line">    <span class="comment">// map方法，根据AQI值，将对应空气质量的天数加1</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">map</span><span class="params">(Object key, Text value, Context context)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> IOException, InterruptedException</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">      String[] items = value.toString().split(<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">      <span class="keyword">int</span> aqi = Integer.parseInt(items[<span class="number">1</span>]);</span><br><span class="line">                                                                       </span><br><span class="line">      <span class="keyword">if</span>(aqi &lt;= <span class="number">50</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="comment">// 优</span></span><br><span class="line">        cond.set(GOOD);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span>(aqi &lt;= <span class="number">100</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="comment">// 良</span></span><br><span class="line">        cond.set(MODERATE);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span>(aqi &lt;= <span class="number">150</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="comment">// 轻度污染</span></span><br><span class="line">        cond.set(LIGHTLY_POLLUTED);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span>(aqi &lt;= <span class="number">200</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="comment">// 中度污染</span></span><br><span class="line">        cond.set(MODERATELY_POLLUTED);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span>(aqi &lt;= <span class="number">300</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="comment">// 重度污染</span></span><br><span class="line">        cond.set(HEAVILY_POLLUTED);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="comment">// 严重污染</span></span><br><span class="line">        cond.set(SEVERELY_POLLUTED);</span><br><span class="line">      &#125;</span><br><span class="line">                                                                     </span><br><span class="line">      context.write(cond, one);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 定义reduce类，对相同的空气质量状况，把它们&lt;K,VList&gt;中VList值全部相加</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">StatReducer</span> <span class="keyword">extends</span> <span class="title">Reducer</span>&lt;<span class="title">Text</span>, <span class="title">IntWritable</span>, <span class="title">Text</span>, <span class="title">IntWritable</span>&gt;</span></span><br><span class="line"><span class="class">  </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> IntWritable result = <span class="keyword">new</span> IntWritable();</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">reduce</span><span class="params">(Text key, Iterable&lt;IntWritable&gt; values,Context context)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> IOException, InterruptedException</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">      <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">for</span> (IntWritable val : values)</span><br><span class="line">      &#123;</span><br><span class="line">        sum += val.get();</span><br><span class="line">      &#125;</span><br><span class="line">      result.set(sum);</span><br><span class="line">      context.write(key, result);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span></span></span><br><span class="line"><span class="function">          <span class="keyword">throws</span> IOException, ClassNotFoundException, InterruptedException</span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    Configuration conf = <span class="keyword">new</span> Configuration();     </span><br><span class="line">    Job job = Job.getInstance(conf, <span class="string">&quot;AqiStat&quot;</span>);           </span><br><span class="line">    job.setInputFormatClass(TextInputFormat.class);</span><br><span class="line">    TextInputFormat.setInputPaths(job, args[<span class="number">0</span>]);  </span><br><span class="line">    job.setJarByClass(AqiStat.class);             </span><br><span class="line">    job.setMapperClass(StatMapper.class);</span><br><span class="line">    job.setCombinerClass(StatReducer.class);</span><br><span class="line">    job.setMapOutputKeyClass(Text.class);         </span><br><span class="line">    job.setMapOutputValueClass(IntWritable.class);</span><br><span class="line">    job.setPartitionerClass(HashPartitioner.class);</span><br><span class="line">    job.setReducerClass(StatReducer.class);</span><br><span class="line">    job.setNumReduceTasks(Integer.parseInt(args[<span class="number">2</span>]));</span><br><span class="line">    job.setOutputKeyClass(Text.class);              </span><br><span class="line">    job.setOutputValueClass(IntWritable.class);            </span><br><span class="line">    job.setOutputFormatClass(TextOutputFormat.class);</span><br><span class="line">    TextOutputFormat.setOutputPath(job, <span class="keyword">new</span> Path(args[<span class="number">1</span>]));</span><br><span class="line">    System.exit(job.waitForCompletion(<span class="keyword">true</span>) ? <span class="number">0</span> : <span class="number">1</span>);   </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>使用Eclipse软件将AqiStat项目导出成Jar文件，指定主类为AqiStat，命名为aqistat.jar，并保存至家目录下。</p>
<h2 id="9-、查看各空气质量天数统计结果"><a href="#9-、查看各空气质量天数统计结果" class="headerlink" title="9 、查看各空气质量天数统计结果"></a>9 、查看各空气质量天数统计结果</h2><p>在家目录下执行aqistat.jar，指定输出目录为/aqioutput，reducer数量为1。如图7所示：<br>hadoop jar aqistat.jar AqiStat /aqiinput /aqioutput 1<br><img src="https://img-blog.csdnimg.cn/20201222154000360.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dUWXVvbmc=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>图7 运行aqistat.jar<br>查看统计结果。如图8所示：<br>hadoop fs -ls /aqioutput<br>hadoop fs -cat /aqioutput/part-r-00000<br><img src="https://img-blog.csdnimg.cn/20201222154008237.png" alt="在这里插入图片描述"><br>图8 查看各空气质量状况天数统计结果</p>
<h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><p>1.复制到虚拟机时不能有中文<br>2.文件名前面有*时，按Ctrl+S保存，星号就没有了<br>3.删除无数据的文件。Hadoop dfs -rm -r /monthlyavgtmp</p>
]]></content>
      <categories>
        <category>项目</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>Hadoop</tag>
        <tag>MapReduce</tag>
      </tags>
  </entry>
  <entry>
    <title>Yu&amp;Spring Boot</title>
    <url>/2019/04/20/Yu&amp;Spring%20Boot%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B/</url>
    <content><![CDATA[<h1 id="写在最最前面"><a href="#写在最最前面" class="headerlink" title="写在最最前面"></a>写在最最前面</h1><p>感谢项目的这段难忘（美好但不太友好）的经历<br>感谢厉害又耐心的学长@谭 @朱 @程 ……<br>还要这段时间帅气的我<br>哈哈哈哈哈哈</p>
<h1 id="各种环境配置"><a href="#各种环境配置" class="headerlink" title="各种环境配置"></a>各种环境配置</h1><p>写在最前面：环境配置就是讲究细心耐心专心！！！<br>真的差一个就没了啊兄弟！！！<br>尤其是各种环境第一次的配置，又不知道是哪错了，只能重头再来。第二次心态会更崩，恶性循环。亲身体验那个绝望哈哈哈</p>
 <span id="more"></span>
<h2 id="JDK配置"><a href="#JDK配置" class="headerlink" title="JDK配置"></a>JDK配置</h2><p>如下：</p>
<pre><code> 1.下载JDK
</code></pre><p> （360助手也可以下载JDK哈哈哈，神奇）<br>  首先到官网下载最新版JDK：Oracle官网下载<br>Accept License Agreement–&gt;下载适合自己pc版本的jdk（x86是32位，x64是64位）</p>
<pre><code> 2.开始安装JDK
</code></pre><p>选择安装路径，可以不安装在C盘，记住安装到哪就行了，默认也行，我安装在<br>C:\Program Files\Java\jdk1.8.0_131<br>（如果你也是idea项目，可以选择和我一样，省事哈哈哈）</p>
<pre><code> 3.安装
</code></pre><p>安装过程中会跳出Jre的安装界面，一定！！放到和之前JDK在同一个文件夹下（原因：记忆有点要遥远了，While我还记得当时自作聪明后，这里卡了好久）。<br> 然后直接下一步开始安装</p>
<pre><code> 4.环境变量配置
</code></pre><p>①右击，计算机——属性——高级系统设置——打开环境变量的配置窗口，在系统环境变量一栏点击新建。（后面就不放图了哈）<br><img src="https://img-blog.csdnimg.cn/20200404184710188.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dUWXVvbmc=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200404184642902.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dUWXVvbmc=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2020040418475123.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dUWXVvbmc=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>②新建环境变量，变量名为：JAVA_HOME，变量值为之前JDK的安装路径，此处安装在：C:\Program Files\Java\jdk1.8.0_131<br>（可以在系统变量下新建，这样可以为每个登录该pc的用户都配置，如果在用户变量中新建，则只为当前用户配置，此处以在系统变量下新建为例）<br>③找到Path变量–&gt;编辑<br>④如果是win10系统，则进入后界面如下，选择新建两个环境变量，<br>一个值为：%JAVA_HOME%\bin<br>另一个为：%JAVA_HOME%\jre\bin<br>（此处笔者已经配置好）<br>⑤如果是win7及之前的系统则进入后界面如下:<br>在变量值最后输入 %JAVA_HOME%\bin;%JAVA_HOME%\jre\bin;<br>（注意原来Path的变量值末尾有没有;号，如果没有，先输入；号再输入上面的代码）</p>
<p>  配置好如图（后面就不放图了哈）<br>  <img src="https://img-blog.csdnimg.cn/20200404192219418.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dUWXVvbmc=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200404192449482.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dUWXVvbmc=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>    最后验证一下</p>
<p>1.win + R–&gt;输入cmd，进入cmd命令行<br>2.输入：java -version 就可以查看版本信息，如果显示如下信息，则表示环境配置成功<br><img src="https://img-blog.csdnimg.cn/20200404183150768.png" alt="在这里插入图片描述"></p>
<h2 id="Maven配置"><a href="#Maven配置" class="headerlink" title="Maven配置"></a>Maven配置</h2><p>如下：<br>前置条件：已安装jdk（见上面）</p>
<pre><code> 1.下载maven
</code></pre><p>下载地址：<a href="http://maven.apache.org/download.cgi">http://maven.apache.org/download.cgi</a><br>官网下载apache-maven-3.5.2.bin .zip 文件</p>
<pre><code> 2.解压apache-maven-3.5.2
</code></pre><p> 和JDK一样，选择安装路径，我安装在<br>D:\apache-maven-3.6.3<br>（如果是idea项目，可以选择一样，省事）</p>
<pre><code> Maven目录分析：
 bin文件夹：含有mvn运行的脚本
 boot文件夹：含有plexusrlds类加载器框架
 conf文件夹：含有settings.xml配置文件
 lib文件夹：含有maven运行时所需要的java类库

 3.配置环境变量 复制maven路径

 ①新建环境变量MAVEN_HOME
</code></pre><p>D:\apache-maven-3.6.3   （maven路径）</p>
<pre><code> ②设置环境变量Path
</code></pre><p> 编辑Path，增加“%MAVEN_HOME%\bin”</p>
<pre><code> ③新建环境变量MAVEN_OPTS
</code></pre><p> 通常需要设置MAVEN_OPTS的值为<br> -Xms128m -Xmx512m<br>原因：Java默认的最大可用内存往往不能够满足Maven运行的需要，比如在项目较大时，使用Maven生成项目站点需要占用大量的内存，如果没有该配置，则容易有java.lang.OutOfMemeoryError</p>
<pre><code> ④修改配置文件（右键编辑文件）
</code></pre><p>通常我们需要修改解压目录下conf/settings.xml文件，这样可以更好的适合我们的使用</p>
<p>此处注意：所有的修改一定要在注释标签外面，不然修改无效。Maven很多标签都是给的例子，都是注释掉的。</p>
<p>文章最后附上我的整个Settings.xml文件配置，如果地址什么都和我一样就可以用<br>1）本地仓库位置修改<br>在<localRepository>标签内添加自己的本地位置路径<br>Default的意思是，如果本地位置失败，就会去那里<br><figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;!-- localRepository</span><br><span class="line">  | The path to the local repository maven will use to store artifacts.</span><br><span class="line">  |</span><br><span class="line">  | Default: $&#123;user.home&#125;/.m2/repository</span><br><span class="line"> &lt;localRepository&gt;/path/to/local/repo&lt;/localRepository&gt;</span><br><span class="line"> --&gt;</span><br><span class="line"> &lt;localRepository&gt;D:\apache-maven-3.6.3\repository&lt;/localRepository&gt;</span><br></pre></td></tr></table></figure></p>
<p>2）修改maven默认的JDK版本<br>在<profiles>标签下添加一个<profile>标签，修改maven默认的JDK版本。</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;profile&gt;     </span><br><span class="line">    &lt;id&gt;JDK-1.8&lt;/id&gt;       </span><br><span class="line">    &lt;activation&gt;       </span><br><span class="line">        &lt;activeByDefault&gt;true&lt;/activeByDefault&gt;       </span><br><span class="line">        &lt;jdk&gt;1.8&lt;/jdk&gt;       </span><br><span class="line">    &lt;/activation&gt;       </span><br><span class="line">    &lt;properties&gt;       </span><br><span class="line">        &lt;maven.compiler.source&gt;1.8&lt;/maven.compiler.source&gt;       </span><br><span class="line">        &lt;maven.compiler.target&gt;1.8&lt;/maven.compiler.target&gt;       </span><br><span class="line">        &lt;maven.compiler.compilerVersion&gt;1.8&lt;/maven.compiler.compilerVersion&gt;       </span><br><span class="line">    &lt;/properties&gt;       </span><br><span class="line">&lt;/profile&gt;</span><br></pre></td></tr></table></figure>
<p>3 ）添加国内镜像源<br>添加<mirrors>标签下<mirror>，添加国内镜像源，这样下载jar包速度很快。默认的中央仓库有时候甚至连接不通。一般使用阿里云镜像库即可。这里我就都加上了，Maven会默认从这几个开始下载，没有的话就会去中央仓库了。</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;!-- 阿里云仓库 --&gt;</span><br><span class="line">&lt;mirror&gt;</span><br><span class="line">    &lt;id&gt;alimaven&lt;/id&gt;</span><br><span class="line">    &lt;mirrorOf&gt;central&lt;/mirrorOf&gt;</span><br><span class="line">    &lt;name&gt;aliyun maven&lt;/name&gt;</span><br><span class="line">    &lt;url&gt;http:<span class="comment">//maven.aliyun.com/nexus/content/repositories/central/&lt;/url&gt;</span></span><br><span class="line">&lt;/mirror&gt;</span><br></pre></td></tr></table></figure>
<pre><code>最后的前一步：验证一下
</code></pre><p>1.win + R–&gt;输入cmd，进入cmd命令行<br>2.输入：mvn -v 就可以查看版本信息，如果显示如下信息（划重点：Maven的版本号），则表示环境配置成功<br><img src="https://img-blog.csdnimg.cn/20200404184557312.png" alt="在这里插入图片描述"></p>
<pre><code> 最后安装jar包到本地仓库
</code></pre><p> mvn install </p>
<pre><code>常用命令
</code></pre><figure class="highlight"><table><tr><td class="code"><pre><span class="line">mvn -v #查看版本信息</span><br><span class="line"></span><br><span class="line">mvn compile #编译</span><br><span class="line"></span><br><span class="line">mvn test # 测试</span><br><span class="line"></span><br><span class="line">mvn package #打包成jar的形式</span><br><span class="line"></span><br><span class="line">mvn clear #删除target</span><br><span class="line"></span><br><span class="line">mvn install #安装jar包到本地仓库</span><br></pre></td></tr></table></figure>
<p>至此，Maven配置告一段落</p>
<h2 id="Tocmat配置"><a href="#Tocmat配置" class="headerlink" title="Tocmat配置"></a>Tocmat配置</h2><pre><code>1.下载
</code></pre><p>下载地址：<a href="http://tomcat.apache.org/">http://tomcat.apache.org/</a><br>我是下载的.zip文件（免安装版本），注意系统是32位和64位的</p>
<pre><code>2.解压
</code></pre><p>直接解压缩，找到目录bin下的startup.bat，启动Tomcat；shutdown.bat：关闭Tomcat</p>
<pre><code>3、Tomcat配置
</code></pre><p>配置Tomcat之前，要保证jdk已经配置完成</p>
<pre><code>同上，右击，计算机——属性——高级系统设置——打开环境变量的配置窗口，在系统环境变量一栏点击新建。
</code></pre><p>切记，安装Tomcat时，在其字母周围不要存在空格，否则最后导致配置不成功（亲身证明哈哈哈）</p>
<pre><code>在系统变量里点新建：
</code></pre><p>变量名：CATALINA_BASE<br>变量值：C:\tomcat\apache-tomcat-8.5.53;</p>
<pre><code>再新建：
</code></pre><p>变量名：CATALINA_HOME<br>变量值：C:\tomcat\apache-tomcat-8.5.53;</p>
<pre><code>点击确定后在classpath中加入
</code></pre><p>%CATALINA_HOME%\common\lib\servlet-api.jar;<br>（注意加的时候在原变量值后加英文状态下的“；”）</p>
<pre><code>在path中加入
</code></pre><p>%CATALINA_HOME%\bin;<br>（注意加的时候在原变量值后加英文状态下的“；”）</p>
<p>Tomcat就配置好了</p>
<pre><code>验证是否配置成功
</code></pre><p>运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入<a href="http://localhost:8080,如果出现页面，那么配置成功。如下：">http://localhost:8080,如果出现页面，那么配置成功。如下：</a><br><img src="https://img-blog.csdnimg.cn/20200404191808358.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dUWXVvbmc=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="IntelliJ-IDEA环境设置"><a href="#IntelliJ-IDEA环境设置" class="headerlink" title="IntelliJ IDEA环境设置"></a>IntelliJ IDEA环境设置</h2><p>如下：</p>
<pre><code>1.下载
</code></pre><p>官网的下载链接：IDEA官网下载地址<br>建议下载专业版，社区版缺少很多功能，体验感没专业版好（可以试用一段时间，学生可以申请一年免费，网上有破解版）</p>
<pre><code>2.开始安装IntelliJ IDEA
</code></pre><p>①选择安装路径；<br>②上面是创建桌面图标，选择电脑对应的版本；<br>下面的可以全选，表示什么格式的文件可直接关联到IDEA，用IDEA来打开（我考虑到日常还是低配的更锻炼思维能力，就没有选）<br>③下一步直接install</p>
<pre><code>3.启动刚安装好的IDEA
</code></pre><p>①如果第一次安装，就直接不导入设置，ok<br>②选个喜欢的主题，然后next<br>③直接next<br>④直接start</p>
<h2 id="IntelliJ-IDEA项目环境配置"><a href="#IntelliJ-IDEA项目环境配置" class="headerlink" title="IntelliJ IDEA项目环境配置"></a>IntelliJ IDEA项目环境配置</h2><pre><code>（写在前面给我自己看的：如果对自己的代码没有那么自信的话，一定要直接搭建Spring Boot，然后用postman做接口测试。
 原因：如果用IntelliJ IDEA自带的Maven和tomcat，他是直接跑整个项目，有错误就不给搭建，大神的错误追踪法对于我这种小白完全不适用，，，
 回忆起在这也卡了好久表示太难了，，，）
</code></pre><p> 由于这次的项目是学长建好的逻辑框架，所以从GitHub下载项目文件，然后拖动到 IntelliJ IDEA，就打开了，这里直接从打开后的配置开始说起：</p>
<pre><code>  1.基础配置:
   IDEA内置了Maven环境，默认采用Maven解决项目依赖问题。
</code></pre><p><img src="https://img-blog.csdnimg.cn/20200404165408541.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dUWXVvbmc=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>①Setting要配置的</p>
<pre><code> 1）JRE配置
</code></pre><p><img src="https://img-blog.csdnimg.cn/20200404170652204.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dUWXVvbmc=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<pre><code>2）Maven配置
这里比较关键昂，我当时在这卡了三天，试了各种方法哈哈哈
（如果遇到麻烦的话，可以留言哦，说不准我遇到过了呢）
</code></pre><p>顺序和注意事项都标好啦<br><img src="https://img-blog.csdnimg.cn/20200404170549934.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dUWXVvbmc=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200404165732932.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dUWXVvbmc=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>    原因：此处勾选，当修改pom文件时，Maven就能帮我们自动导包了         </p>
<pre><code>3）Spring Boot配置
</code></pre><p>点这<br><img src="https://img-blog.csdnimg.cn/20200404172919941.png" alt="在这里插入图片描述"><br>会出现下面这个<br>选择左上角的加号，找到里面的Spring Boot</p>
<pre><code>（如果没有Spring Boot，可以自行百度。因为我当时也没有，但不记得是改的哪里了）
</code></pre><p>就会出现这个，然后配置<br><img src="https://img-blog.csdnimg.cn/20200404171458976.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dUWXVvbmc=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这有问题对吧哈哈哈哈，我也是。学长告诉我这样弄就好了<br><img src="https://img-blog.csdnimg.cn/20200404173527453.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dUWXVvbmc=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>选择project as a maven</p>
<pre><code>可以看一下自己的最右边：
</code></pre><p>有四个哦，如果没有，就检查一下相关配置<br><img src="https://img-blog.csdnimg.cn/20200404185156348.png" alt="在这里插入图片描述"><br>然后就好了，环境配置暂时告一段落</p>
<h2 id="Spring-Boot相关笔记"><a href="#Spring-Boot相关笔记" class="headerlink" title="Spring Boot相关笔记"></a>Spring Boot相关笔记</h2><p><img src="https://img-blog.csdnimg.cn/20200404205932233.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dUWXVvbmc=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200404205944405.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dUWXVvbmc=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200404205953663.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dUWXVvbmc=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200404210003894.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dUWXVvbmc=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200404210013146.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dUWXVvbmc=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2020040421002358.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dUWXVvbmc=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="项目"><a href="#项目" class="headerlink" title="项目"></a>项目</h2><p>具体项目的一些易错点也有总结，但就不放出来了<br>皮一下很开心<br><img src="https://img-blog.csdnimg.cn/20200404185717143.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dUWXVvbmc=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="postman配置"><a href="#postman配置" class="headerlink" title="postman配置"></a>postman配置</h2><pre><code>1.下载
</code></pre><p>官网：<a href="https://www.getpostman.com/downloads/">https://www.getpostman.com/downloads/</a><br><img src="https://img-blog.csdnimg.cn/20200404193407572.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dUWXVvbmc=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<pre><code>2.创建账号或者用谷歌浏览器账号登录
</code></pre><p>  我已经弄完了，借的图（下面有作者大大的连接昂，如有侵权请联系我删掉）<br>  <img src="https://img-blog.csdnimg.cn/20200404193531577.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dUWXVvbmc=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<pre><code> 3.请求方式是get post什么的，根据自己的需求选
</code></pre><p>   <img src="https://img-blog.csdnimg.cn/2020040419365691.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dUWXVvbmc=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<pre><code>简单逻辑就是：
搜索用get
添加删除和修改用post

最后，有返回值，就成功了
</code></pre><p> 中心思想：返回值数据都是给前端看的或者用的</p>
<pre><code>如果代码和我一样有返回前端的请求：
</code></pre><p> return AjexResult.success();</p>
<pre><code>那么操作成功的返回值类似于这样：
&#123;
&quot;msg&quot;: &quot;操作成功&quot;,
&quot;code&quot;: 0
&#125;
</code></pre><h2 id="Git基本命令"><a href="#Git基本命令" class="headerlink" title="Git基本命令"></a>Git基本命令</h2><pre><code> 1.安装
</code></pre><p>不想介绍了哈哈哈，可以百度的到</p>
<pre><code>2.基本命令
</code></pre><p>一些笔记，可以稍微了解一下<br><img src="https://img-blog.csdnimg.cn/20200404201546602.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dUWXVvbmc=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><img src="https://img-blog.csdnimg.cn/20200404201451972.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dUWXVvbmc=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200404201710777.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dUWXVvbmc=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">以下是谭学长整理的</span><br><span class="line">初始化                       </span><br><span class="line">git init    </span><br><span class="line">将远端仓库标为origion</span><br><span class="line">git remote add origin http:仓库名.git</span><br><span class="line">从远程仓库拉取文件 </span><br><span class="line">git pull --rebase origin master</span><br><span class="line"></span><br><span class="line">……………………将自己的controller等文件放到拉取下的文件的相应位置………………</span><br><span class="line"></span><br><span class="line">标记修改文件</span><br><span class="line">git add .</span><br><span class="line">将修改的标记文件加入本地仓库</span><br><span class="line">git commit -m <span class="string">&quot;这里写你本次修改的内容&quot;</span></span><br><span class="line">推到远程仓库</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure>
<h2 id="Setting-xml"><a href="#Setting-xml" class="headerlink" title="Setting.xml"></a>Setting.xml</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--</span><br><span class="line"><span class="function">Licensed to the Apache Software <span class="title">Foundation</span> <span class="params">(ASF)</span> under one</span></span><br><span class="line"><span class="function">or more contributor license agreements.  See the NOTICE file</span></span><br><span class="line"><span class="function">distributed with <span class="keyword">this</span> work <span class="keyword">for</span> additional information</span></span><br><span class="line"><span class="function">regarding copyright ownership.  The ASF licenses <span class="keyword">this</span> file</span></span><br><span class="line"><span class="function">to you under the Apache License, Version 2.0 <span class="params">(the</span></span></span><br><span class="line"><span class="function"><span class="params"><span class="string">&quot;License&quot;</span>)</span></span>; you may not use <span class="keyword">this</span> file except in compliance</span><br><span class="line">with the License.  You may obtain a copy of the License at</span><br><span class="line"></span><br><span class="line">    http:<span class="comment">//www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"></span><br><span class="line">Unless required by applicable law or agreed to in writing,</span><br><span class="line">software distributed under the License is distributed on an</span><br><span class="line"><span class="string">&quot;AS IS&quot;</span> BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY</span><br><span class="line">KIND, either express or implied.  See the License <span class="keyword">for</span> the</span><br><span class="line">specific language governing permissions and limitations</span><br><span class="line">under the License.</span><br><span class="line">--&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--</span><br><span class="line"> | This is the configuration file <span class="keyword">for</span> Maven. It can be specified at two levels:</span><br><span class="line"> |</span><br><span class="line"> |  <span class="number">1.</span> User Level. This settings.xml file provides configuration <span class="keyword">for</span> a single user,</span><br><span class="line"> |                 and is normally provided in $&#123;user.home&#125;/.m2/settings.xml.</span><br><span class="line"> |</span><br><span class="line"> |                 NOTE: This location can be overridden with the CLI option:</span><br><span class="line"> |</span><br><span class="line"> |                 -s /path/to/user/settings.xml</span><br><span class="line"> |</span><br><span class="line"> |  <span class="number">2.</span> Global Level. This settings.xml file provides configuration <span class="keyword">for</span> all Maven</span><br><span class="line"> |                 <span class="function">users on a <span class="title">machine</span> <span class="params">(assuming they<span class="string">&#x27;re all using the same Maven</span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="string"> |                 installation). It&#x27;</span>s normally provided in</span></span></span><br><span class="line"><span class="function"><span class="params"> |                 $&#123;maven.conf&#125;/settings.xml.</span></span></span><br><span class="line"><span class="function"><span class="params"> |</span></span></span><br><span class="line"><span class="function"><span class="params"> |                 NOTE: This location can be overridden with the CLI option:</span></span></span><br><span class="line"><span class="function"><span class="params"> |</span></span></span><br><span class="line"><span class="function"><span class="params"> |                 -gs /path/to/global/settings.xml</span></span></span><br><span class="line"><span class="function"><span class="params"> |</span></span></span><br><span class="line"><span class="function"><span class="params"> | The sections in <span class="keyword">this</span> sample file are intended to give you a running start at</span></span></span><br><span class="line"><span class="function"><span class="params"> | getting the most out of your Maven installation. Where appropriate, the <span class="keyword">default</span></span></span></span><br><span class="line"><span class="function"><span class="params"> | values (values used when the setting is not specified)</span> are provided.</span></span><br><span class="line"><span class="function"> |</span></span><br><span class="line"><span class="function"> |--&gt;</span></span><br><span class="line"><span class="function">&lt;settings xmlns</span>=<span class="string">&quot;http://maven.apache.org/SETTINGS/1.0.0&quot;</span></span><br><span class="line">          xmlns:xsi=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="line">          xsi:schemaLocation=<span class="string">&quot;http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd&quot;</span>&gt;</span><br><span class="line">  &lt;!-- localRepository</span><br><span class="line">   | The path to the local repository maven will use to store artifacts.</span><br><span class="line">   |</span><br><span class="line">   | Default: $&#123;user.home&#125;/.m2/repository</span><br><span class="line">  &lt;localRepository&gt;/path/to/local/repo&lt;/localRepository&gt;</span><br><span class="line">  --&gt;</span><br><span class="line">  &lt;localRepository&gt;D:\apache-maven-3.6.3\repository&lt;/localRepository&gt;</span><br><span class="line"></span><br><span class="line">  &lt;!-- interactiveMode</span><br><span class="line">   | This will determine whether maven prompts you when it needs input. If set to <span class="keyword">false</span>,</span><br><span class="line">   | maven will use a sensible <span class="keyword">default</span> value, perhaps based on some other setting, <span class="keyword">for</span></span><br><span class="line">   | the parameter in question.</span><br><span class="line">   |</span><br><span class="line">   | Default: <span class="keyword">true</span></span><br><span class="line">  &lt;interactiveMode&gt;true&lt;/interactiveMode&gt;</span><br><span class="line">  --&gt;</span><br><span class="line"></span><br><span class="line">  &lt;!-- offline</span><br><span class="line">   | Determines whether maven should attempt to connect to the network when executing a build.</span><br><span class="line">   | This will have an effect on artifact downloads, artifact deployment, and others.</span><br><span class="line">   |</span><br><span class="line">   | Default: <span class="keyword">false</span></span><br><span class="line">  &lt;offline&gt;false&lt;/offline&gt;</span><br><span class="line">  --&gt;</span><br><span class="line"></span><br><span class="line">  &lt;!-- pluginGroups</span><br><span class="line">   | This is a list of additional group identifiers that will be searched when resolving plugins by their prefix, i.e.</span><br><span class="line">   | when invoking a command line like <span class="string">&quot;mvn prefix:goal&quot;</span>. Maven will automatically add the group identifiers</span><br><span class="line">   | <span class="string">&quot;org.apache.maven.plugins&quot;</span> and <span class="string">&quot;org.codehaus.mojo&quot;</span> <span class="keyword">if</span> these are not already contained in the list.</span><br><span class="line">   |--&gt;</span><br><span class="line">  &lt;pluginGroups&gt;</span><br><span class="line">    &lt;!-- pluginGroup</span><br><span class="line">     | Specifies a further group identifier to use <span class="keyword">for</span> plugin lookup.</span><br><span class="line">    &lt;pluginGroup&gt;com.your.plugins&lt;/pluginGroup&gt;</span><br><span class="line">    --&gt;</span><br><span class="line">  &lt;/pluginGroups&gt;</span><br><span class="line"></span><br><span class="line">  &lt;!-- proxies</span><br><span class="line">   | This is a list of proxies which can be used on <span class="keyword">this</span> machine to connect to the network.</span><br><span class="line">   | <span class="function">Unless otherwise <span class="title">specified</span> <span class="params">(by system property or command-line <span class="keyword">switch</span>)</span>, the first proxy</span></span><br><span class="line"><span class="function">   | specification in <span class="keyword">this</span> list marked as active will be used.</span></span><br><span class="line"><span class="function">   |--&gt;</span></span><br><span class="line"><span class="function">  &lt;proxies&gt;</span></span><br><span class="line"><span class="function">    &lt;!-- proxy</span></span><br><span class="line"><span class="function">     | Specification <span class="keyword">for</span> one proxy, to be used in connecting to the network.</span></span><br><span class="line"><span class="function">     |</span></span><br><span class="line"><span class="function">    &lt;proxy&gt;</span></span><br><span class="line"><span class="function">      &lt;id&gt;optional&lt;/id&gt;</span></span><br><span class="line"><span class="function">      &lt;active&gt;<span class="keyword">true</span>&lt;/active&gt;</span></span><br><span class="line"><span class="function">      &lt;protocol&gt;http&lt;/protocol&gt;</span></span><br><span class="line"><span class="function">      &lt;username&gt;proxyuser&lt;/username&gt;</span></span><br><span class="line"><span class="function">      &lt;password&gt;proxypass&lt;/password&gt;</span></span><br><span class="line"><span class="function">      &lt;host&gt;proxy.host.net&lt;/host&gt;</span></span><br><span class="line"><span class="function">      &lt;port&gt;80&lt;/port&gt;</span></span><br><span class="line"><span class="function">      &lt;nonProxyHosts&gt;local.net|some.host.com&lt;/nonProxyHosts&gt;</span></span><br><span class="line"><span class="function">    &lt;/proxy&gt;</span></span><br><span class="line"><span class="function">    --&gt;</span></span><br><span class="line"><span class="function">  &lt;/proxies&gt;</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">  &lt;!-- servers</span></span><br><span class="line"><span class="function">   | This is a list of authentication profiles, keyed by the server-id used within the system.</span></span><br><span class="line"><span class="function">   | Authentication profiles can be used whenever maven must make a connection to a remote server.</span></span><br><span class="line"><span class="function">   |--&gt;</span></span><br><span class="line"><span class="function">  &lt;servers&gt;</span></span><br><span class="line"><span class="function">    &lt;!-- server</span></span><br><span class="line"><span class="function">     | Specifies the authentication information to use when connecting to a particular server, identified by</span></span><br><span class="line"><span class="function">     | a unique name within the <span class="title">system</span> <span class="params">(referred to by the <span class="string">&#x27;id&#x27;</span> attribute below)</span>.</span></span><br><span class="line"><span class="function">     |</span></span><br><span class="line"><span class="function">     | NOTE: You should either specify username/password OR privateKey/passphrase, since these pairings are</span></span><br><span class="line"><span class="function">     |       used together.</span></span><br><span class="line"><span class="function">     |</span></span><br><span class="line"><span class="function">    &lt;server&gt;</span></span><br><span class="line"><span class="function">      &lt;id&gt;deploymentRepo&lt;/id&gt;</span></span><br><span class="line"><span class="function">      &lt;username&gt;repouser&lt;/username&gt;</span></span><br><span class="line"><span class="function">      &lt;password&gt;repopwd&lt;/password&gt;</span></span><br><span class="line"><span class="function">    &lt;/server&gt;</span></span><br><span class="line"><span class="function">    --&gt;</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">    &lt;!-- Another sample, using keys to authenticate.</span></span><br><span class="line"><span class="function">    &lt;server&gt;</span></span><br><span class="line"><span class="function">      &lt;id&gt;siteServer&lt;/id&gt;</span></span><br><span class="line"><span class="function">      &lt;privateKey&gt;/path/to/<span class="keyword">private</span>/key&lt;/privateKey&gt;</span></span><br><span class="line">      &lt;passphrase&gt;optional; leave empty if not used.&lt;/passphrase&gt;</span><br><span class="line">    &lt;/server&gt;</span><br><span class="line">    --&gt;</span><br><span class="line">  &lt;/servers&gt;</span><br><span class="line"></span><br><span class="line">  &lt;!-- mirrors</span><br><span class="line">   | This is a list of mirrors to be used in downloading artifacts from remote repositories.</span><br><span class="line">   |</span><br><span class="line">   | It works like <span class="keyword">this</span>: a POM may declare a repository to use in resolving certain artifacts.</span><br><span class="line">   | However, <span class="keyword">this</span> repository may have problems with heavy traffic at times, so people have mirrored</span><br><span class="line">   | it to several places.</span><br><span class="line">   |</span><br><span class="line">   | That repository definition will have a unique id, so we can create a mirror reference <span class="keyword">for</span> that</span><br><span class="line">   | repository, to be used as an alternate download site. The mirror site will be the preferred</span><br><span class="line">   | server <span class="keyword">for</span> that repository.</span><br><span class="line">   |--&gt;</span><br><span class="line">  &lt;mirrors&gt;</span><br><span class="line">    &lt;!-- mirror</span><br><span class="line">     | Specifies a repository mirror site to use instead of a given repository. The repository that</span><br><span class="line">     | <span class="keyword">this</span> mirror serves has an ID that matches the mirrorOf element of <span class="keyword">this</span> mirror. IDs are used</span><br><span class="line">     | <span class="keyword">for</span> inheritance and direct lookup purposes, and must be unique across the set of mirrors.</span><br><span class="line">     |</span><br><span class="line">	  --&gt;</span><br><span class="line">    &lt;mirror&gt;</span><br><span class="line">      &lt;id&gt;nexus-aliyun&lt;/id&gt;</span><br><span class="line">      &lt;mirrorOf&gt;central&lt;/mirrorOf&gt;</span><br><span class="line">      &lt;name&gt;nexus-aliyun&lt;/name&gt;</span><br><span class="line">      &lt;url&gt;http:<span class="comment">//maven.aliyun.com/nexus/content/groups/public&lt;/url&gt;</span></span><br><span class="line">    &lt;/mirror&gt;</span><br><span class="line">    </span><br><span class="line">  &lt;/mirrors&gt;</span><br><span class="line"></span><br><span class="line">  &lt;!-- profiles</span><br><span class="line">   | This is a list of profiles which can be activated in a variety of ways, and which can modify</span><br><span class="line">   | the build process. Profiles provided in the settings.xml are intended to provide local machine-</span><br><span class="line">   | specific paths and repository locations which allow the build to work in the local environment.</span><br><span class="line">   |</span><br><span class="line">   | For example, <span class="keyword">if</span> you have an integration testing plugin - like cactus - that needs to know where</span><br><span class="line">   | your Tomcat instance is installed, you can provide a variable here such that the variable is</span><br><span class="line">   | dereferenced during the build process to configure the cactus plugin.</span><br><span class="line">   |</span><br><span class="line">   | As noted above, profiles can be activated in a variety of ways. One way - the activeProfiles</span><br><span class="line">   | <span class="function">section of <span class="keyword">this</span> <span class="title">document</span> <span class="params">(settings.xml)</span> - will be discussed later. Another way essentially</span></span><br><span class="line"><span class="function">   | relies on the detection of a system property, either matching a particular value <span class="keyword">for</span> the property,</span></span><br><span class="line"><span class="function">   | or merely testing its existence. Profiles can also be activated by JDK version prefix, where a</span></span><br><span class="line"><span class="function">   | value of &#x27;1.4&#x27; might activate a profile when the build is executed on a JDK version of &#x27;1.4.2_07&#x27;.</span></span><br><span class="line"><span class="function">   | Finally, the list of active profiles can be specified directly from the command line.</span></span><br><span class="line"><span class="function">   |</span></span><br><span class="line"><span class="function">   | NOTE: For profiles defined in the settings.xml, you are restricted to specifying only artifact</span></span><br><span class="line"><span class="function">   |       repositories, plugin repositories, and free-form properties to be used as configuration</span></span><br><span class="line"><span class="function">   |       variables <span class="keyword">for</span> plugins in the POM.</span></span><br><span class="line"><span class="function">   |</span></span><br><span class="line"><span class="function">   |--&gt;</span></span><br><span class="line"><span class="function">  &lt;profiles&gt;</span></span><br><span class="line"><span class="function">    &lt;!-- profile</span></span><br><span class="line"><span class="function">     | Specifies a set of introductions to the build process, to be activated using one or more of the</span></span><br><span class="line"><span class="function">     | mechanisms described above. For inheritance purposes, and to activate profiles via &lt;activatedProfiles/&gt;</span></span><br><span class="line"><span class="function">     | or the command line, profiles have to have an ID that is unique.</span></span><br><span class="line"><span class="function">     |</span></span><br><span class="line"><span class="function">     | An encouraged best practice <span class="keyword">for</span> profile identification is to use a consistent naming convention</span></span><br><span class="line"><span class="function">     | <span class="keyword">for</span> profiles, such as &#x27;env-dev&#x27;, &#x27;env-test&#x27;, &#x27;env-production&#x27;, &#x27;user-jdcasey&#x27;, &#x27;user-brett&#x27;, etc.</span></span><br><span class="line"><span class="function">     | This will make it more intuitive to understand what the set of introduced profiles is attempting</span></span><br><span class="line"><span class="function">     | to accomplish, particularly when you only have a list of profile id&#x27;s <span class="keyword">for</span> debug.</span></span><br><span class="line"><span class="function">     |</span></span><br><span class="line"><span class="function">     | This profile example uses the JDK version to trigger activation, and provides a JDK-specific repo.</span></span><br><span class="line"><span class="function">    &lt;profile&gt;</span></span><br><span class="line"><span class="function">      &lt;id&gt;jdk-1.4&lt;/id&gt;</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">      &lt;activation&gt;</span></span><br><span class="line"><span class="function">        &lt;jdk&gt;1.4&lt;/jdk&gt;</span></span><br><span class="line"><span class="function">      &lt;/activation&gt;</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">      &lt;repositories&gt;</span></span><br><span class="line"><span class="function">        &lt;repository&gt;</span></span><br><span class="line"><span class="function">          &lt;id&gt;jdk14&lt;/id&gt;</span></span><br><span class="line"><span class="function">          &lt;name&gt;Repository <span class="keyword">for</span> JDK 1.4 builds&lt;/name&gt;</span></span><br><span class="line"><span class="function">          &lt;url&gt;http:<span class="comment">//www.myhost.com/maven/jdk14&lt;/url&gt;</span></span></span><br><span class="line"><span class="function">          &lt;layout&gt;<span class="keyword">default</span>&lt;/layout&gt;</span></span><br><span class="line"><span class="function">          &lt;snapshotPolicy&gt;always&lt;/snapshotPolicy&gt;</span></span><br><span class="line"><span class="function">        &lt;/repository&gt;</span></span><br><span class="line"><span class="function">      &lt;/repositories&gt;</span></span><br><span class="line"><span class="function">    &lt;/profile&gt;</span></span><br><span class="line"><span class="function">    --&gt;</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">    &lt;!--</span></span><br><span class="line"><span class="function">     | Here is another profile, activated by the system property &#x27;target-env&#x27; with a value of &#x27;dev&#x27;,</span></span><br><span class="line"><span class="function">     | which provides a specific path to the Tomcat instance. To use <span class="keyword">this</span>, your plugin configuration</span></span><br><span class="line"><span class="function">     | might hypothetically look like:</span></span><br><span class="line"><span class="function">     |</span></span><br><span class="line"><span class="function">     | ...</span></span><br><span class="line"><span class="function">     | &lt;plugin&gt;</span></span><br><span class="line"><span class="function">     |   &lt;groupId&gt;org.myco.myplugins&lt;/groupId&gt;</span></span><br><span class="line"><span class="function">     |   &lt;artifactId&gt;myplugin&lt;/artifactId&gt;</span></span><br><span class="line"><span class="function">     |</span></span><br><span class="line"><span class="function">     |   &lt;configuration&gt;</span></span><br><span class="line">     |     &lt;tomcatLocation&gt;$&#123;tomcatPath&#125;&lt;/tomcatLocation&gt;</span><br><span class="line">     |   &lt;/configuration&gt;</span><br><span class="line">     | &lt;/plugin&gt;</span><br><span class="line">     | ...</span><br><span class="line">     |</span><br><span class="line">     | NOTE: If you just wanted to inject <span class="keyword">this</span> configuration whenever someone set <span class="string">&#x27;target-env&#x27;</span> to</span><br><span class="line">     |       anything, you could just leave off the &lt;value/&gt; inside the activation-property.</span><br><span class="line">     |</span><br><span class="line">    &lt;profile&gt;</span><br><span class="line">      &lt;id&gt;env-dev&lt;/id&gt;</span><br><span class="line"></span><br><span class="line">      &lt;activation&gt;</span><br><span class="line">        &lt;property&gt;</span><br><span class="line">          &lt;name&gt;target-env&lt;/name&gt;</span><br><span class="line">          &lt;value&gt;dev&lt;/value&gt;</span><br><span class="line">        &lt;/property&gt;</span><br><span class="line">      &lt;/activation&gt;</span><br><span class="line"></span><br><span class="line">      &lt;properties&gt;</span><br><span class="line">        &lt;tomcatPath&gt;/path/to/tomcat/instance&lt;/tomcatPath&gt;</span><br><span class="line">      &lt;/properties&gt;</span><br><span class="line">    &lt;/profile&gt;</span><br><span class="line">    --&gt;</span><br><span class="line">  &lt;/profiles&gt;</span><br><span class="line"></span><br><span class="line">  &lt;!-- activeProfiles</span><br><span class="line">   | List of profiles that are active <span class="keyword">for</span> all builds.</span><br><span class="line">   |</span><br><span class="line">  &lt;activeProfiles&gt;</span><br><span class="line">    &lt;activeProfile&gt;alwaysActiveProfile&lt;/activeProfile&gt;</span><br><span class="line">    &lt;activeProfile&gt;anotherAlwaysActiveProfile&lt;/activeProfile&gt;</span><br><span class="line">  &lt;/activeProfiles&gt;</span><br><span class="line">  --&gt;</span><br><span class="line">&lt;/settings&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>参考文献：<br><a href="https://blog.csdn.net/qq_33215972/article/details/73693140">https://blog.csdn.net/qq_33215972/article/details/73693140</a><br><a href="https://blog.csdn.net/u010282984/article/details/80884810">https://blog.csdn.net/u010282984/article/details/80884810</a><br><a href="https://blog.csdn.net/qq_37591637/article/details/88655294">https://blog.csdn.net/qq_37591637/article/details/88655294</a><br><a href="https://blog.csdn.net/huo920/article/details/82082403">https://blog.csdn.net/huo920/article/details/82082403</a><br>参考视频：<br>b站up主：湖北大学瑞翼工坊</p>
]]></content>
      <categories>
        <category>项目</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>Spring Boot</tag>
      </tags>
  </entry>
  <entry>
    <title>python的那些小程序（绘图）</title>
    <url>/2020/10/18/python%E7%9A%84%E9%82%A3%E4%BA%9B%E5%B0%8F%E7%A8%8B%E5%BA%8F%EF%BC%88%E7%BB%98%E5%9B%BE%EF%BC%89/</url>
    <content><![CDATA[<p>python的那些小程序之绘图：</p>
<p>五角星，字符画，万花筒</p>
<span id="more"></span>
<h2 id="绘制五角星"><a href="#绘制五角星" class="headerlink" title="绘制五角星"></a>绘制五角星</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle</span><br><span class="line"></span><br><span class="line">spiral = turtle.Turtle()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">20</span>):</span><br><span class="line">    spiral.forward(i * <span class="number">10</span>)</span><br><span class="line">    spiral.right(<span class="number">144</span>)</span><br><span class="line"></span><br><span class="line">turtle.done()</span><br></pre></td></tr></table></figure>
<p>结果展示<br><img src="https://img-blog.csdnimg.cn/20201016102536856.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dUWXVvbmc=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h2 id="绘制万花筒"><a href="#绘制万花筒" class="headerlink" title="绘制万花筒"></a>绘制万花筒</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle</span><br><span class="line"></span><br><span class="line">spiral = turtle.Turtle()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">20</span>):</span><br><span class="line">    spiral.forward(i * <span class="number">10</span>)</span><br><span class="line">    spiral.right(<span class="number">144</span>)</span><br><span class="line"></span><br><span class="line">turtle.done()</span><br></pre></td></tr></table></figure>
<p>结果展示<br><img src="https://img-blog.csdnimg.cn/2020101610292091.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dUWXVvbmc=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h2 id="绘制字符画"><a href="#绘制字符画" class="headerlink" title="绘制字符画"></a>绘制字符画</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">在这里插入代码片</span><br></pre></td></tr></table></figure>
<p>结果展示<br><img src="https://img-blog.csdnimg.cn/20201018113821631.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dUWXVvbmc=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>（搞错了，再来）<br>（原因：输出的文档格式需要调整为宋体小六）<br>更改后：<br><img src="https://img-blog.csdnimg.cn/202010181140284.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dUWXVvbmc=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>原图：<br><img src="https://img-blog.csdnimg.cn/20201018114050357.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dUWXVvbmc=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p>问题1：报错ImportError:No module named ‘PIL’<br>原因1：保存图片就需要一个图片保存的库，即缺失一个pillow的数据包<br>解决1：在黑窗口下输入</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pip install -i https://pypi.douban.com/simple pillow</span><br></pre></td></tr></table></figure>
<p>问题2：报错Traceback (most recent call last):<br>  File “E:/wyt/第一章/字符画.py”, line 28, in <module><br>    fp = open(u’独角兽.jpg’,’rb’)<br>FileNotFoundError: [Errno 2] ==No such file or directory:== ‘独角兽.jpg’<br>原因2：①应该是你没有把图片image.jpg放在这个目录C:\Python27\Lib\site-packages\PIL\<br>②相对路径问题<br>解决2：/a为绝对路径. 指当前文件所在的文件夹，. . 指当前文件的上一级目录。这里我直接将其改为</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">D:/Desktop/独角兽.png</span><br></pre></td></tr></table></figure>
<p>问题3：报错PIL.UnidentifiedImageError: cannot identify image file <_io.TextIOWrapper name='D:/Desktop/独角兽.png' mode='r' encoding='utf-8'><br>原因3：fp已经打开了，直接fp.read()试试<br>解决3：Image.open(fp)改为fp.read()</p>
<p>问题4：发现from PIL import Image调包为灰色<br>原因4：上述操作实际上是为无法使用的导入声明添加了内容为“# noinspection PyUnresolvedReferences”的注释，它专门针对“This inspection detects names that should resolve but don’t. Due to dynamic dispatch and duck typing, this is possible in a limited but useful number of cases. Top-level and class-level items are supported better than instance items.”提示的情况。其作用是：让PyCharm 在代码检查时人为跳过某些特定部分的代码检查。<br>解决4：①右键点击项目，找下面的Mark Directory as 选择Source Root”<br>②点击File-Invalidte Caches/Restart…重启<br>两种方法均不起作用，无法解决问题。<br>③将鼠标移动到那行代码，点击出现提示“Unused import statement”表示import声明不可用，左边同时出现黄色小灯泡，将鼠标移动至黄色小灯泡那里，会出现向下箭头，点击箭头出现下拉菜单，继续点击第一条“Optimize imports”（切记要点击的是最右边的三角号，不是这一整行，否则会出错），右面选择第四个“Suppress for statement”，即可。<br><img src="https://img-blog.csdnimg.cn/20201017121256468.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dUWXVvbmc=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>最后操作完成会出现如下结果：<br><img src="https://img-blog.csdnimg.cn/20201017121329279.png#pic_center" alt="在这里插入图片描述"></p>
<p>问题5：报错’str’ object has no attribute ‘resize’<br>原因5：可能为类型不对<br>打印类型</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(image_file))</span><br></pre></td></tr></table></figure>
<p>输出：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&lt;<span class="class"><span class="keyword">class</span> &#x27;<span class="title">str</span>&#x27;&gt;</span></span><br></pre></td></tr></table></figure>
<p>确认原因：resize是给文件对象用的<br>解决5：忘了。。。</p>
<p>问题6：raise AttributeError(f”module ‘{<strong>name</strong>}’ has no attribute ‘{name}’”)</p>
<p>问题7：输出文件找不到。<br>解决7：给输出文件加绝对路径。</p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>①出错之后可以及时打印类型，检查问题原因<br>②基础先打牢，报错会少很多，而且修改报错起来更快</p>
<h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p><a href="https://blog.csdn.net/pythonxiaohei/article/details/99698027">https://blog.csdn.net/pythonxiaohei/article/details/99698027</a><br><a href="https://blog.csdn.net/wait_nothing_alone/article/details/52901531">https://blog.csdn.net/wait_nothing_alone/article/details/52901531</a><br><a href="https://www.cnblogs.com/hangzhi/p/9096321.html">https://www.cnblogs.com/hangzhi/p/9096321.html</a><br>Python图像处理：<br><a href="https://www.cnblogs.com/luorunsb/p/10708215.html">https://www.cnblogs.com/luorunsb/p/10708215.html</a></p>
]]></content>
      <categories>
        <category>小程序</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>一周年の纪念</title>
    <url>/2024/03/25/%E4%B8%80%E5%91%A8%E5%B9%B4%E3%81%AE%E7%BA%AA%E5%BF%B5/</url>
    <content><![CDATA[<p> <a href="https://lightrain.top/">https://lightrain.top/</a></p>
<p><em>light rain，源自初识时的小雨。</em></p>
<p><code>谨以此网站，献给一年前的自己。</code></p>
<span id="more"></span>
<h2 id="致敬「Hello-World」"><a href="#致敬「Hello-World」" class="headerlink" title="致敬「Hello World」"></a>致敬「Hello World」</h2><h3 id="我想和你开始"><a href="#我想和你开始" class="headerlink" title="我想和你开始"></a>我想和你开始</h3><p>还记得print的第一句话，是“Hello，World！”自此，我和你就有了联系。</p>
<p>一年前的今天，磕磕绊绊地完成了第一个项目。</p>
<p>连续一周的凌晨四点，实现了从只学了C到写出Spring Boot的巨大跨越。初识「增删改查」，与大量bug硬磕。</p>
<p>幸运的是，遇到了愿意帮忙找errors原因的学长学姐。幸运的是，这么一番折腾下来自己还喜欢这个世界。</p>
<h3 id="你好，世界！"><a href="#你好，世界！" class="headerlink" title="你好，世界！"></a>你好，世界！</h3><p>瑞翼是帷幕，三创是开发之路的正式开始。</p>
<ol>
<li>需求分析<br><img src="https://img-blog.csdnimg.cn/20210420205811666.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dUWXVvbmc=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li>
<li><p>团队设计的接口文档<br><img src="https://img-blog.csdnimg.cn/20210420205732922.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dUWXVvbmc=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</li>
<li><p>产品原型图设计<br><img src="https://img-blog.csdnimg.cn/20210420205402674.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dUWXVvbmc=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210420205527736.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dUWXVvbmc=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</li>
<li><p>小程序<br><img src="https://img-blog.csdnimg.cn/20210420210352413.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dUWXVvbmc=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</li>
</ol>
<h3 id="你是我的全世界"><a href="#你是我的全世界" class="headerlink" title="你是我的全世界"></a>你是我的全世界</h3><p>余生请多多指教。</p>
]]></content>
      <categories>
        <category>复盘</category>
      </categories>
      <tags>
        <tag>队友</tag>
        <tag>回忆</tag>
      </tags>
  </entry>
  <entry>
    <title></title>
    <url>/2024/03/25/%E4%BA%BA%E6%89%8B%E4%B8%80%E5%A2%A9%20%E2%80%94%E2%80%94%20python%E8%87%AA%E5%8A%A8%E7%BB%98%E5%88%B6%E5%86%B0%E5%A2%A9%E5%A2%A9/</url>
    <content><![CDATA[<p>@<a href="人手一墩 —— python自动绘制冰墩墩">TOC</a><br>（20220213：暂未更新完，正在一步步尝试优化。。。。</p>
<p>python绘制2022冬奥会吉祥物—冰墩墩。turtle作为python的一个自动绘图工具，绘图需要提供大量的坐标点。我们先参考「涂寐」<a href="https://blog.csdn.net/weixin_46318141/article/details/122841674绘制一款大众版冰墩墩。">https://blog.csdn.net/weixin_46318141/article/details/122841674绘制一款大众版冰墩墩。</a><br>在查找过程中，看到<strong>自动绘制</strong>的观点：</p>
<blockquote>
<p>以一张图片的像素点为探讨点，论RGB，导入OpenCV，读取图片RGB数据，转成三位数组，然后利用turtle库画。</p>
</blockquote>
<p>也就是说，可以用Opencv等图像识别来自动获取图片边缘的位置坐标，绘制属于我们独一无二的冰墩墩。这里给出黑白粗糙的简易版冰墩墩，和彩色高级的进阶版冰墩墩。后者需要配置更多的依赖，原理也更加复杂。</p>
<h1 id="大众版"><a href="#大众版" class="headerlink" title="大众版"></a>大众版</h1><h2 id="绘制代码"><a href="#绘制代码" class="headerlink" title="绘制代码"></a>绘制代码</h2><p>我们先绘制一只大众款冰墩墩。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># python绘制2022冬奥会吉祥物--冰墩墩</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> turtle <span class="keyword">as</span> t</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"></span><br><span class="line"><span class="comment"># 是否显示绘画过程</span></span><br><span class="line"><span class="comment"># t.tracer(False)</span></span><br><span class="line"></span><br><span class="line">t.setup(<span class="number">800</span>, <span class="number">600</span>)  <span class="comment"># 设置窗体大小</span></span><br><span class="line">t.title(<span class="string">&#x27;送你一只冰墩墩&#x27;</span>)    <span class="comment"># 更改窗口默认标题</span></span><br><span class="line">t.speed(<span class="number">10</span>)  <span class="comment"># 设置画笔移动速度</span></span><br><span class="line"><span class="comment"># t.bgpic(&#x27;dd.png&#x27;)  # 找到一张简笔画，开始疯狂的测算描边</span></span><br><span class="line">t.hideturtle()  <span class="comment"># 隐藏光标</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 画出大致轮廓</span></span><br><span class="line"><span class="comment"># 画脑门</span></span><br><span class="line">t.penup()  <span class="comment"># 抬起画笔，不留下痕迹</span></span><br><span class="line">t.goto(-<span class="number">73</span>, <span class="number">230</span>)  <span class="comment"># 设置起点</span></span><br><span class="line">t.pencolor(<span class="string">&#x27;lightgray&#x27;</span>)  <span class="comment"># 画笔颜色</span></span><br><span class="line">t.pensize(<span class="number">3</span>)  <span class="comment"># 画笔宽度</span></span><br><span class="line">t.fillcolor(<span class="string">&#x27;white&#x27;</span>)   <span class="comment"># 绘制图形的填充色</span></span><br><span class="line">t.begin_fill() <span class="comment"># 从此处落笔开始，准备填充图形</span></span><br><span class="line">t.pendown()    <span class="comment"># 画笔落下，留下痕迹</span></span><br><span class="line">t.setheading(<span class="number">20</span>)   <span class="comment"># 以 x 轴正方向为基准，设置当前朝向为 angle 角度</span></span><br><span class="line">t.circle(-<span class="number">250</span>, <span class="number">35</span>) <span class="comment"># 画圆，1.半径；2.偏移角度</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 右耳</span></span><br><span class="line">t.setheading(<span class="number">50</span>)</span><br><span class="line">t.circle(-<span class="number">42</span>,<span class="number">180</span>)</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 右侧脸与右侧肚子</span></span><br><span class="line">t.setheading(-<span class="number">50</span>)</span><br><span class="line">t.circle(-<span class="number">190</span>,<span class="number">30</span>)</span><br><span class="line">t.circle(-<span class="number">320</span>,<span class="number">45</span>)</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 右脚</span></span><br><span class="line">t.circle(<span class="number">120</span>,<span class="number">30</span>)</span><br><span class="line">t.circle(<span class="number">200</span>,<span class="number">12</span>)</span><br><span class="line">t.circle(-<span class="number">18</span>,<span class="number">85</span>)</span><br><span class="line">t.circle(-<span class="number">180</span>,<span class="number">23</span>)</span><br><span class="line">t.circle(-<span class="number">20</span>,<span class="number">110</span>)</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 裤裆</span></span><br><span class="line">t.circle(<span class="number">15</span>,<span class="number">115</span>)</span><br><span class="line">t.circle(<span class="number">100</span>, <span class="number">12</span>)</span><br><span class="line">t.circle(<span class="number">15</span>, <span class="number">120</span>)</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 左脚</span></span><br><span class="line">t.circle(-<span class="number">15</span>, <span class="number">110</span>)</span><br><span class="line">t.circle(-<span class="number">150</span>, <span class="number">30</span>)</span><br><span class="line">t.circle(-<span class="number">15</span>, <span class="number">70</span>)</span><br><span class="line">t.circle(-<span class="number">150</span>, <span class="number">10</span>)</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 左侧肚子</span></span><br><span class="line">t.circle(<span class="number">200</span>, <span class="number">35</span>)</span><br><span class="line">t.circle(-<span class="number">150</span>, <span class="number">20</span>)</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 左手</span></span><br><span class="line">t.setheading(-<span class="number">120</span>)</span><br><span class="line">t.circle(<span class="number">50</span>, <span class="number">30</span>)</span><br><span class="line">t.circle(-<span class="number">35</span>, <span class="number">200</span>)</span><br><span class="line">t.circle(-<span class="number">300</span>, <span class="number">23</span>)</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 左侧脸</span></span><br><span class="line">t.setheading(<span class="number">86</span>)</span><br><span class="line">t.circle(-<span class="number">300</span>, <span class="number">26</span>)</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 左耳</span></span><br><span class="line">t.setheading(<span class="number">122</span>)</span><br><span class="line">t.circle(-<span class="number">53</span>, <span class="number">160</span>)</span><br><span class="line">t.end_fill()</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 补上右手</span></span><br><span class="line">t.penup()</span><br><span class="line">t.goto(<span class="number">177</span>, <span class="number">112</span>)</span><br><span class="line">t.pencolor(<span class="string">&quot;lightgray&quot;</span>)</span><br><span class="line">t.pensize(<span class="number">3</span>)</span><br><span class="line">t.fillcolor(<span class="string">&quot;white&quot;</span>)</span><br><span class="line">t.begin_fill()</span><br><span class="line">t.pendown()</span><br><span class="line">t.setheading(<span class="number">80</span>)</span><br><span class="line">t.circle(-<span class="number">45</span>, <span class="number">200</span>)</span><br><span class="line">t.circle(-<span class="number">300</span>, <span class="number">23</span>)</span><br><span class="line">t.end_fill()</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 画脸上的彩虹圈</span></span><br><span class="line">t.penup()</span><br><span class="line">t.goto(-<span class="number">135</span>, <span class="number">120</span>)</span><br><span class="line">t.pensize(<span class="number">5</span>)</span><br><span class="line">t.pencolor(<span class="string">&quot;cyan&quot;</span>)</span><br><span class="line">t.pendown()</span><br><span class="line">t.setheading(<span class="number">60</span>)</span><br><span class="line">t.circle(-<span class="number">165</span>, <span class="number">150</span>)</span><br><span class="line">t.circle(-<span class="number">130</span>, <span class="number">78</span>)</span><br><span class="line">t.circle(-<span class="number">250</span>, <span class="number">30</span>)</span><br><span class="line">t.circle(-<span class="number">138</span>, <span class="number">105</span>)</span><br><span class="line">t.penup()</span><br><span class="line">t.goto(-<span class="number">131</span>, <span class="number">116</span>)</span><br><span class="line">t.pencolor(<span class="string">&quot;slateblue&quot;</span>)</span><br><span class="line">t.pendown()</span><br><span class="line">t.setheading(<span class="number">60</span>)</span><br><span class="line">t.circle(-<span class="number">160</span>, <span class="number">144</span>)</span><br><span class="line">t.circle(-<span class="number">120</span>, <span class="number">78</span>)</span><br><span class="line">t.circle(-<span class="number">242</span>, <span class="number">30</span>)</span><br><span class="line">t.circle(-<span class="number">135</span>, <span class="number">105</span>)</span><br><span class="line">t.penup()</span><br><span class="line">t.goto(-<span class="number">127</span>, <span class="number">112</span>)</span><br><span class="line">t.pencolor(<span class="string">&quot;orangered&quot;</span>)</span><br><span class="line">t.pendown()</span><br><span class="line">t.setheading(<span class="number">60</span>)</span><br><span class="line">t.circle(-<span class="number">155</span>, <span class="number">136</span>)</span><br><span class="line">t.circle(-<span class="number">116</span>, <span class="number">86</span>)</span><br><span class="line">t.circle(-<span class="number">220</span>, <span class="number">30</span>)</span><br><span class="line">t.circle(-<span class="number">134</span>, <span class="number">103</span>)</span><br><span class="line">t.penup()</span><br><span class="line">t.goto(-<span class="number">123</span>, <span class="number">108</span>)</span><br><span class="line">t.pencolor(<span class="string">&quot;gold&quot;</span>)</span><br><span class="line">t.pendown()</span><br><span class="line">t.setheading(<span class="number">60</span>)</span><br><span class="line">t.circle(-<span class="number">150</span>, <span class="number">136</span>)</span><br><span class="line">t.circle(-<span class="number">104</span>, <span class="number">86</span>)</span><br><span class="line">t.circle(-<span class="number">220</span>, <span class="number">30</span>)</span><br><span class="line">t.circle(-<span class="number">126</span>, <span class="number">102</span>)</span><br><span class="line">t.penup()</span><br><span class="line">t.goto(-<span class="number">120</span>, <span class="number">104</span>)</span><br><span class="line">t.pencolor(<span class="string">&quot;greenyellow&quot;</span>)</span><br><span class="line">t.pendown()</span><br><span class="line">t.setheading(<span class="number">60</span>)</span><br><span class="line">t.circle(-<span class="number">145</span>, <span class="number">136</span>)</span><br><span class="line">t.circle(-<span class="number">90</span>, <span class="number">83</span>)</span><br><span class="line">t.circle(-<span class="number">220</span>, <span class="number">30</span>)</span><br><span class="line">t.circle(-<span class="number">120</span>, <span class="number">100</span>)</span><br><span class="line">t.penup()</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 眼睛部分</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 左黑眼圈</span></span><br><span class="line">t.penup()</span><br><span class="line">t.goto(-<span class="number">64</span>, <span class="number">120</span>)</span><br><span class="line">t.pencolor(<span class="string">&quot;black&quot;</span>)</span><br><span class="line">t.pensize(<span class="number">1</span>)</span><br><span class="line">t.fillcolor(<span class="string">&#x27;black&#x27;</span>)</span><br><span class="line">t.begin_fill()</span><br><span class="line">t.pendown()</span><br><span class="line">t.setheading(<span class="number">40</span>)</span><br><span class="line">t.circle(-<span class="number">35</span>, <span class="number">152</span>)</span><br><span class="line">t.circle(-<span class="number">100</span>, <span class="number">50</span>)</span><br><span class="line">t.circle(-<span class="number">35</span>, <span class="number">130</span>)</span><br><span class="line">t.circle(-<span class="number">100</span>, <span class="number">50</span>)</span><br><span class="line">t.end_fill()</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 右黑眼圈</span></span><br><span class="line">t.penup()</span><br><span class="line">t.goto(<span class="number">51</span>, <span class="number">82</span>)</span><br><span class="line">t.fillcolor()</span><br><span class="line">t.begin_fill()</span><br><span class="line">t.pendown()</span><br><span class="line">t.setheading(<span class="number">120</span>)</span><br><span class="line">t.circle(-<span class="number">32</span>, <span class="number">152</span>)</span><br><span class="line">t.circle(-<span class="number">100</span>, <span class="number">55</span>)</span><br><span class="line">t.circle(-<span class="number">25</span>, <span class="number">120</span>)</span><br><span class="line">t.circle(-<span class="number">120</span>, <span class="number">45</span>)</span><br><span class="line">t.end_fill()</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 填充黑色部分，从右耳开始，填充至右手时，画爱心</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 右耳黑</span></span><br><span class="line">t.penup()</span><br><span class="line">t.goto(<span class="number">90</span>, <span class="number">230</span>)</span><br><span class="line">t.pencolor(<span class="string">&#x27;black&#x27;</span>)</span><br><span class="line">t.pensize(<span class="number">1</span>)</span><br><span class="line">t.setheading(<span class="number">40</span>)</span><br><span class="line">t.fillcolor(<span class="string">&#x27;black&#x27;</span>)</span><br><span class="line">t.begin_fill()</span><br><span class="line">t.pendown()</span><br><span class="line">t.circle(-<span class="number">30</span>, <span class="number">170</span>)</span><br><span class="line">t.setheading(<span class="number">125</span>)</span><br><span class="line">t.circle(<span class="number">150</span>, <span class="number">23</span>)</span><br><span class="line">t.end_fill()</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 左耳黑</span></span><br><span class="line">t.penup()</span><br><span class="line">t.goto(-<span class="number">130</span>, <span class="number">180</span>)</span><br><span class="line">t.pencolor()</span><br><span class="line">t.pensize(<span class="number">1</span>)</span><br><span class="line">t.fillcolor()</span><br><span class="line">t.begin_fill()</span><br><span class="line">t.pendown()</span><br><span class="line">t.setheading(<span class="number">120</span>)</span><br><span class="line">t.circle(-<span class="number">28</span>, <span class="number">160</span>)</span><br><span class="line">t.setheading(<span class="number">210</span>)</span><br><span class="line">t.circle(<span class="number">150</span>, <span class="number">20</span>)</span><br><span class="line">t.end_fill()</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 左手黑</span></span><br><span class="line">t.penup()</span><br><span class="line">t.goto(-<span class="number">180</span>, -<span class="number">55</span>)</span><br><span class="line">t.fillcolor()</span><br><span class="line">t.begin_fill()</span><br><span class="line">t.setheading(-<span class="number">120</span>)</span><br><span class="line">t.pendown()</span><br><span class="line">t.circle(<span class="number">50</span>, <span class="number">30</span>)</span><br><span class="line">t.circle(-<span class="number">27</span>, <span class="number">200</span>)</span><br><span class="line">t.circle(-<span class="number">300</span>, <span class="number">20</span>)</span><br><span class="line">t.setheading(-<span class="number">90</span>)</span><br><span class="line">t.circle(<span class="number">300</span>, <span class="number">14</span>)</span><br><span class="line">t.end_fill()</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 左脚黑</span></span><br><span class="line">t.penup()</span><br><span class="line">t.goto(-<span class="number">38</span>, -<span class="number">210</span>)</span><br><span class="line">t.fillcolor()</span><br><span class="line">t.begin_fill()</span><br><span class="line">t.pendown()</span><br><span class="line">t.setheading(-<span class="number">155</span>)</span><br><span class="line">t.circle(<span class="number">15</span>, <span class="number">100</span>)</span><br><span class="line">t.circle(-<span class="number">10</span>, <span class="number">110</span>)</span><br><span class="line">t.circle(-<span class="number">100</span>, <span class="number">30</span>)</span><br><span class="line">t.circle(-<span class="number">15</span>, <span class="number">65</span>)</span><br><span class="line">t.circle(-<span class="number">100</span>, <span class="number">10</span>)</span><br><span class="line">t.circle(<span class="number">200</span>, <span class="number">15</span>)</span><br><span class="line">t.setheading(-<span class="number">14</span>)</span><br><span class="line">t.circle(-<span class="number">200</span>, <span class="number">27</span>)</span><br><span class="line">t.end_fill()</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 右脚黑</span></span><br><span class="line">t.penup()</span><br><span class="line">t.goto(<span class="number">108</span>, -<span class="number">168</span>)</span><br><span class="line">t.fillcolor()</span><br><span class="line">t.begin_fill()</span><br><span class="line">t.pendown()</span><br><span class="line">t.setheading(-<span class="number">115</span>)</span><br><span class="line">t.circle(<span class="number">110</span>, <span class="number">15</span>)</span><br><span class="line">t.circle(<span class="number">200</span>, <span class="number">10</span>)</span><br><span class="line">t.circle(-<span class="number">18</span>, <span class="number">80</span>)</span><br><span class="line">t.circle(-<span class="number">180</span>, <span class="number">13</span>)</span><br><span class="line">t.circle(-<span class="number">20</span>, <span class="number">90</span>)</span><br><span class="line">t.circle(<span class="number">15</span>, <span class="number">60</span>)</span><br><span class="line">t.setheading(<span class="number">42</span>)</span><br><span class="line">t.circle(-<span class="number">200</span>, <span class="number">29</span>)</span><br><span class="line">t.end_fill()</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 右手内部</span></span><br><span class="line">t.penup()</span><br><span class="line">t.goto(<span class="number">182</span>, <span class="number">95</span>)</span><br><span class="line">t.pencolor()</span><br><span class="line">t.pensize(<span class="number">1</span>)</span><br><span class="line">t.fillcolor()</span><br><span class="line">t.begin_fill()</span><br><span class="line">t.setheading(<span class="number">95</span>)</span><br><span class="line">t.pendown()</span><br><span class="line">t.circle(-<span class="number">37</span>, <span class="number">160</span>)</span><br><span class="line">t.circle(-<span class="number">20</span>, <span class="number">50</span>)</span><br><span class="line">t.circle(-<span class="number">200</span>, <span class="number">30</span>)</span><br><span class="line">t.end_fill()</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 画龙点睛作用</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 左眼珠子</span></span><br><span class="line">t.penup()</span><br><span class="line">t.goto(-<span class="number">47</span>, <span class="number">55</span>)</span><br><span class="line">t.fillcolor(<span class="string">&quot;white&quot;</span>)</span><br><span class="line">t.begin_fill()</span><br><span class="line">t.pendown()</span><br><span class="line">t.setheading(<span class="number">0</span>)</span><br><span class="line">t.circle(<span class="number">25</span>, <span class="number">360</span>)</span><br><span class="line">t.end_fill()</span><br><span class="line">t.penup()</span><br><span class="line">t.goto(-<span class="number">45</span>, <span class="number">62</span>)</span><br><span class="line">t.pencolor(<span class="string">&quot;darkslategray&quot;</span>)</span><br><span class="line">t.fillcolor(<span class="string">&quot;darkslategray&quot;</span>)</span><br><span class="line">t.begin_fill()</span><br><span class="line">t.pendown()</span><br><span class="line">t.setheading(<span class="number">0</span>)</span><br><span class="line">t.circle(<span class="number">19</span>, <span class="number">360</span>)</span><br><span class="line">t.end_fill()</span><br><span class="line">t.penup()</span><br><span class="line">t.goto(-<span class="number">45</span>, <span class="number">68</span>)</span><br><span class="line">t.fillcolor(<span class="string">&quot;black&quot;</span>)</span><br><span class="line">t.begin_fill()</span><br><span class="line">t.pendown()</span><br><span class="line">t.setheading(<span class="number">0</span>)</span><br><span class="line">t.circle(<span class="number">10</span>, <span class="number">360</span>)</span><br><span class="line">t.end_fill()</span><br><span class="line">t.penup()</span><br><span class="line">t.goto(-<span class="number">47</span>, <span class="number">86</span>)</span><br><span class="line">t.pencolor(<span class="string">&quot;white&quot;</span>)</span><br><span class="line">t.fillcolor(<span class="string">&quot;white&quot;</span>)</span><br><span class="line">t.begin_fill()</span><br><span class="line">t.pendown()</span><br><span class="line">t.setheading(<span class="number">0</span>)</span><br><span class="line">t.circle(<span class="number">5</span>, <span class="number">360</span>)</span><br><span class="line">t.end_fill()</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 右眼珠子</span></span><br><span class="line">t.penup()</span><br><span class="line">t.goto(<span class="number">79</span>, <span class="number">60</span>)</span><br><span class="line">t.fillcolor(<span class="string">&quot;white&quot;</span>)</span><br><span class="line">t.begin_fill()</span><br><span class="line">t.pendown()</span><br><span class="line">t.setheading(<span class="number">0</span>)</span><br><span class="line">t.circle(<span class="number">24</span>, <span class="number">360</span>)</span><br><span class="line">t.end_fill()</span><br><span class="line">t.penup()</span><br><span class="line">t.goto(<span class="number">79</span>, <span class="number">64</span>)</span><br><span class="line">t.pencolor(<span class="string">&quot;darkslategray&quot;</span>)</span><br><span class="line">t.fillcolor(<span class="string">&quot;darkslategray&quot;</span>)</span><br><span class="line">t.begin_fill()</span><br><span class="line">t.pendown()</span><br><span class="line">t.setheading(<span class="number">0</span>)</span><br><span class="line">t.circle(<span class="number">19</span>, <span class="number">360</span>)</span><br><span class="line">t.end_fill()</span><br><span class="line">t.penup()</span><br><span class="line">t.goto(<span class="number">79</span>, <span class="number">70</span>)</span><br><span class="line">t.fillcolor(<span class="string">&quot;black&quot;</span>)</span><br><span class="line">t.begin_fill()</span><br><span class="line">t.pendown()</span><br><span class="line">t.setheading(<span class="number">0</span>)</span><br><span class="line">t.circle(<span class="number">10</span>, <span class="number">360</span>)</span><br><span class="line">t.end_fill()</span><br><span class="line">t.penup()</span><br><span class="line">t.goto(<span class="number">79</span>, <span class="number">88</span>)</span><br><span class="line">t.pencolor(<span class="string">&quot;white&quot;</span>)</span><br><span class="line">t.fillcolor(<span class="string">&quot;white&quot;</span>)</span><br><span class="line">t.begin_fill()</span><br><span class="line">t.pendown()</span><br><span class="line">t.setheading(<span class="number">0</span>)</span><br><span class="line">t.circle(<span class="number">5</span>, <span class="number">360</span>)</span><br><span class="line">t.end_fill()</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 大黑鼻子</span></span><br><span class="line">t.penup()</span><br><span class="line">t.goto(<span class="number">37</span>, <span class="number">80</span>)</span><br><span class="line">t.fillcolor(<span class="string">&quot;black&quot;</span>)</span><br><span class="line">t.begin_fill()</span><br><span class="line">t.pendown()</span><br><span class="line">t.circle(-<span class="number">8</span>, <span class="number">130</span>)</span><br><span class="line">t.circle(-<span class="number">22</span>, <span class="number">100</span>)</span><br><span class="line">t.circle(-<span class="number">8</span>, <span class="number">130</span>)</span><br><span class="line">t.end_fill()</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 小嘴儿</span></span><br><span class="line">t.penup()</span><br><span class="line">t.goto(-<span class="number">15</span>, <span class="number">48</span>)</span><br><span class="line">t.setheading(-<span class="number">36</span>)</span><br><span class="line">t.begin_fill()</span><br><span class="line">t.pendown()</span><br><span class="line">t.circle(<span class="number">60</span>, <span class="number">70</span>)</span><br><span class="line">t.setheading(-<span class="number">132</span>)</span><br><span class="line">t.circle(-<span class="number">45</span>, <span class="number">100</span>)</span><br><span class="line">t.end_fill()</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 右手爱心</span></span><br><span class="line">t.penup()</span><br><span class="line">t.goto(<span class="number">220</span>, <span class="number">115</span>)</span><br><span class="line">t.pencolor(<span class="string">&quot;brown&quot;</span>)</span><br><span class="line">t.pensize(<span class="number">1</span>)</span><br><span class="line">t.fillcolor(<span class="string">&quot;brown&quot;</span>)</span><br><span class="line">t.begin_fill()</span><br><span class="line">t.pendown()</span><br><span class="line">t.setheading(<span class="number">36</span>)</span><br><span class="line">t.circle(-<span class="number">8</span>, <span class="number">180</span>)</span><br><span class="line">t.circle(-<span class="number">60</span>, <span class="number">24</span>)</span><br><span class="line">t.setheading(<span class="number">110</span>)</span><br><span class="line">t.circle(-<span class="number">60</span>, <span class="number">24</span>)</span><br><span class="line">t.circle(-<span class="number">8</span>, <span class="number">180</span>)</span><br><span class="line">t.end_fill()</span><br><span class="line">t.penup()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 标识</span></span><br><span class="line"><span class="comment"># 文字具体位置需要微调</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 专属名</span></span><br><span class="line">t.pencolor(<span class="string">&quot;black&quot;</span>)</span><br><span class="line">t.goto(-<span class="number">60</span>, -<span class="number">140</span>)</span><br><span class="line"><span class="comment"># t.write(&quot;Baby&#x27;s Bing Dwen Dwen&quot;, font=(&#x27;Arial&#x27;, 10, &#x27;bold italic&#x27;))</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 奥运时间地点</span></span><br><span class="line">t.pencolor(<span class="string">&#x27;red&#x27;</span>)</span><br><span class="line">t.goto(-<span class="number">36</span>, -<span class="number">160</span>)</span><br><span class="line">t.write(<span class="string">&quot;BEIJING 2022&quot;</span>, font=(<span class="string">&#x27;Arial&#x27;</span>, <span class="number">12</span>, <span class="string">&#x27;bold italic&#x27;</span>))</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 奥运五环</span></span><br><span class="line">t.penup()</span><br><span class="line">t.goto(-<span class="number">5</span>, -<span class="number">170</span>)</span><br><span class="line">t.pendown()</span><br><span class="line">t.pencolor(<span class="string">&quot;blue&quot;</span>)</span><br><span class="line">t.circle(<span class="number">6</span>)</span><br><span class="line">t.penup()</span><br><span class="line">t.goto(<span class="number">10</span>, -<span class="number">170</span>)</span><br><span class="line">t.pendown()</span><br><span class="line">t.pencolor(<span class="string">&quot;black&quot;</span>)</span><br><span class="line">t.circle(<span class="number">6</span>)</span><br><span class="line">t.penup()</span><br><span class="line">t.goto(<span class="number">25</span>, -<span class="number">170</span>)</span><br><span class="line">t.pendown()</span><br><span class="line">t.pencolor(<span class="string">&quot;brown&quot;</span>)</span><br><span class="line">t.circle(<span class="number">6</span>)</span><br><span class="line">t.penup()</span><br><span class="line">t.goto(<span class="number">2</span>, -<span class="number">175</span>)</span><br><span class="line">t.pendown()</span><br><span class="line">t.pencolor(<span class="string">&quot;lightgoldenrod&quot;</span>)</span><br><span class="line">t.circle(<span class="number">6</span>)</span><br><span class="line">t.penup()</span><br><span class="line">t.goto(<span class="number">16</span>, -<span class="number">175</span>)</span><br><span class="line">t.pendown()</span><br><span class="line">t.pencolor(<span class="string">&quot;green&quot;</span>)</span><br><span class="line">t.circle(<span class="number">6</span>)</span><br><span class="line">t.penup()</span><br><span class="line"></span><br><span class="line">t.pencolor(<span class="string">&#x27;lightgray&#x27;</span>)</span><br><span class="line">t.goto(<span class="number">230</span>, -<span class="number">160</span>)</span><br><span class="line">t.write(<span class="string">&quot;冰墩墩&quot;</span>, font=(<span class="string">&#x27;Arial&#x27;</span>, <span class="number">12</span>, <span class="string">&#x27;bold italic&#x27;</span>))</span><br><span class="line">t.goto(<span class="number">230</span>, -<span class="number">180</span>)</span><br><span class="line">t.write(<span class="string">&quot;冬奥加油！&quot;</span>, font=(<span class="string">&#x27;Arial&#x27;</span>, <span class="number">12</span>, <span class="string">&#x27;bold italic&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># sleep(2)</span></span><br><span class="line">t.done()</span><br></pre></td></tr></table></figure>
<h2 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h2><p>1.把上文中的源码 copy 到 3.py 中<br>2.安装 pyinstaller 模块：pip install pyinstaller<br>3.简单封装：pyinstaller -F 3.py<br>4.运行弹出shell终端：pyinstaller -wF 3.py<br>5.加上应用图标： pyinstaller -wF -i 2.ico 3.py<br>注：使用 -i 参数试，图片格式仅可为 ico （ico可以在网站中制作）<br>注注：有时图标需要是中等图标界面才能显示<br><img src="https://img-blog.csdnimg.cn/c6b4c941ec434d18bd76147589d67a81.png" alt="在这里插入图片描述"><br>注：最后exe文件名和py文件名一致</p>
<h2 id="结果图"><a href="#结果图" class="headerlink" title="结果图"></a>结果图</h2><p>最后将3.exe文件改名为冰墩墩.exe<br><img src="https://img-blog.csdnimg.cn/910f6227c139416884c9e71a5f90d0f1.png" alt="在这里插入图片描述"><br>冰墩墩.exe程序运行绘制可爱的冰墩墩（爱心发射！！！<br><img src="https://img-blog.csdnimg.cn/dac6eac68b764d11ac27795c8c08a94e.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5pivWXXmrLg=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<h1 id="简易版"><a href="#简易版" class="headerlink" title="简易版"></a>简易版</h1><p>turtle是python的一个很好玩的自动绘图工具。然而，用它来画一幅画需要提供大量的坐标点。上文为了用它画出一幅好看的画，手工计算了很多图片线稿的描点的位置。但其实可以用计算机图像识别来自动获取图片边缘的位置坐标，比如Opencv。</p>
<h2 id="代码分解"><a href="#代码分解" class="headerlink" title="代码分解"></a>代码分解</h2><p>先从python的opencv一个基本案例中学习canny函数。</p>
<p>python的opencv图像识别。<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line">img = cv2.imread(<span class="string">&quot;2.png&quot;</span>)<span class="comment">#读取一张图片</span></span><br><span class="line">cv2.imshow(<span class="string">&quot;窗口标题&quot;</span>,img)<span class="comment">#在一个窗口显示图片</span></span><br></pre></td></tr></table></figure><br>cv2.imread()读取一个图像文件，然后将图像的像素信息转化成一个numpy矩阵，并返回。cv2.imshow()则是读取一个numpy矩阵信息，将其作为像素信息在新窗口中打印出来。</p>
<p>至此读取图片工作完成了，下面通过非微分边缘检测算子： Canny函数，获取图片的边缘信息。</p>
<blockquote>
<p>流程：去噪 —&gt; 梯度 —&gt; 非极大值抑制 —&gt; 滞后阈值<br>具体步骤：彩色图像转换为灰度图像（以灰度图或者单通道图读入）<br>对图像进行高斯模糊（去噪）<br>计算图像梯度，根据梯度计算图像边缘幅值与角度<br>沿梯度方向进行非极大值抑制（边缘细化）<br>双阈值边缘连接处理<br>二值化图像输出结果<br>详见：<a href="https://blog.csdn.net/wumu720123/article/details/89578530">https://blog.csdn.net/wumu720123/article/details/89578530</a></p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">cv2.Canny(image,            # 输入原图（必须为单通道图）</span></span><br><span class="line"><span class="string">          threshold1,</span></span><br><span class="line"><span class="string">          threshold2,       # 较大的阈值2用于检测图像中明显的边缘</span></span><br><span class="line"><span class="string">          [, edges[,</span></span><br><span class="line"><span class="string">          apertureSize[,    # apertureSize：Sobel算子的大小</span></span><br><span class="line"><span class="string">          L2gradient ]]])   # 参数(布尔值)：</span></span><br><span class="line"><span class="string">                              true： 使用更精确的L2范数进行计算（即两个方向的倒数的平方和再开放），</span></span><br><span class="line"><span class="string">                              false：使用L1范数（直接将两个方向导数的绝对值相加）。</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>
<p>其中，threshold1,threshold2为滞后阈值min和max。返回值为边缘图像。<br><img src="https://img-blog.csdnimg.cn/5bfe681b35964e51b72f57785b13e66c.png" alt="在这里插入图片描述"><br>边缘检测函数，将img图像的边缘像素信息作为numpy矩阵返回，里面的0和200这个参数是阈值范围参数，可自行调节。通过可调整阈值大小的程序，得到最合适的值为11，220。<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">point=cv2.Canny(img, <span class="number">000</span>, <span class="number">200</span>)</span><br></pre></td></tr></table></figure><br><img src="https://img-blog.csdnimg.cn/44d937f60ad647b18c3772b6c5dbdd44.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5pivWXXmrLg=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>虽然得到了边缘位置的信息，但这个矩阵信息却是显示的图像的矩阵的旋转矩阵。因此还需要对所得矩阵进行旋转，否则可能会得到倒过来的图像。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy</span><br><span class="line">point=numpy.rot90(black,k=<span class="number">3</span>)</span><br></pre></td></tr></table></figure>
<p>numpy.rot90()这个函数是矩阵顺时针旋转90度的函数，k代表旋转的次数。要旋转3次才矫正(也就是逆时针一次)。<br>得到绘图点的像素信息后，开始用turtle进行绘图</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle</span><br><span class="line"><span class="keyword">for</span> y <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(point)):</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(point[y])):</span><br><span class="line">        <span class="keyword">if</span> point[y][x]!=<span class="number">0</span>:</span><br><span class="line">            turtle.penup()</span><br><span class="line">            turtle.goto(y,x)</span><br><span class="line">            turtle.pendown()</span><br><span class="line">            turtle.goto(y,x)</span><br><span class="line">            turtle.penup()</span><br></pre></td></tr></table></figure>
<p>因为绘图点矩阵是通过canny边缘识别得到的，故除了边缘意外的位置像素值都为0。判断x，y坐标下绘图点矩阵的像素信息是否为0，这样就能描绘出一张图片的线稿了。</p>
<h2 id="可调整Canny阈值大小的源码"><a href="#可调整Canny阈值大小的源码" class="headerlink" title="可调整Canny阈值大小的源码"></a>可调整Canny阈值大小的源码</h2><p>调整黑白图阈值的源码，为在彩色源码的基础上删除代码</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dst = cv2.bitwise_and(img, img, mask=canny)  <span class="comment"># just add some colours to edges from original image.</span></span><br></pre></td></tr></table></figure>
<p>和</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">gray = cv2.cvtColor(img,cv2.COLOR_BGR2GRAY)</span><br></pre></td></tr></table></figure>
<p>全部源码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line">lowThreshold = <span class="number">0</span></span><br><span class="line">max_lowThreshold = <span class="number">100</span></span><br><span class="line"></span><br><span class="line">maxThreshold = <span class="number">100</span></span><br><span class="line">max_maxThreshold = <span class="number">300</span></span><br><span class="line">kernel_size = <span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">canny_low_threshold</span>(<span class="params">intial</span>):</span></span><br><span class="line">    blur = cv2.GaussianBlur(gray, (<span class="number">3</span>, <span class="number">3</span>), <span class="number">0</span>)</span><br><span class="line">    canny = cv2.Canny(blur, intial,maxThreshold,apertureSize = kernel_size)  <span class="comment"># x是最小阈值,y是最大阈值</span></span><br><span class="line">    dst = cv2.bitwise_and(img, img, mask=canny)  <span class="comment"># just add some colours to edges from original image.</span></span><br><span class="line">    cv2.imshow(<span class="string">&#x27;canny&#x27;</span>, dst)</span><br><span class="line">    <span class="comment"># cv2.imshow(&#x27;canny&#x27;, canny)</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">canny_max_threshold</span>(<span class="params">intial</span>):</span></span><br><span class="line">    blur = cv2.GaussianBlur(gray, (<span class="number">3</span>, <span class="number">3</span>), <span class="number">0</span>)</span><br><span class="line">    canny = cv2.Canny(blur, lowThreshold,intial,apertureSize = kernel_size)  <span class="comment"># x是最小阈值,y是最大阈值</span></span><br><span class="line">    dst = cv2.bitwise_and(img, img, mask=canny)  <span class="comment"># just add some colours to edges from original image.</span></span><br><span class="line">    cv2.imshow(<span class="string">&#x27;canny&#x27;</span>, dst)</span><br><span class="line">    <span class="comment"># cv2.imshow(&#x27;canny&#x27;, canny)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># img = cv2.imread(&#x27;2.jpg&#x27;,0)   # 后面参数0即是以灰度读取</span></span><br><span class="line">img = cv2.imread(<span class="string">&#x27;2.jpg&#x27;</span>)</span><br><span class="line">gray = cv2.cvtColor(img,cv2.COLOR_BGR2GRAY)</span><br><span class="line"></span><br><span class="line">cv2.namedWindow(<span class="string">&#x27;canny&#x27;</span>, cv2.WINDOW_NORMAL | cv2.WINDOW_KEEPRATIO)</span><br><span class="line">cv2.createTrackbar(<span class="string">&#x27;Min threshold&#x27;</span>, <span class="string">&#x27;canny&#x27;</span>, lowThreshold, max_lowThreshold, canny_low_threshold)</span><br><span class="line">cv2.createTrackbar(<span class="string">&#x27;Max threshold&#x27;</span>, <span class="string">&#x27;canny&#x27;</span>, maxThreshold, max_maxThreshold, canny_max_threshold)</span><br><span class="line"></span><br><span class="line">canny_low_threshold(<span class="number">0</span>)  <span class="comment"># initialization</span></span><br><span class="line"><span class="keyword">if</span> cv2.waitKey(<span class="number">0</span>) == <span class="number">27</span>:    <span class="comment"># 27是ESC键值</span></span><br><span class="line">    cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure>
<h2 id="全部代码"><a href="#全部代码" class="headerlink" title="全部代码"></a>全部代码</h2><p>可调节参数：缩放图像尺寸，窗口标题</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">t.setup(<span class="number">800</span>,<span class="number">800</span>)      <span class="comment"># 缩放图像尺寸</span></span><br><span class="line">t.title(<span class="string">&#x27;送你一只冰墩墩&#x27;</span>)    <span class="comment"># 更改窗口默认标题</span></span><br></pre></td></tr></table></figure>
<p>笔的大小</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">t.pensize(<span class="number">4</span>) <span class="comment"># 笔的大小</span></span><br></pre></td></tr></table></figure>
<p>绘图速度</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">t.speed(<span class="number">10000</span>)</span><br></pre></td></tr></table></figure>
<p>绘图的中心位置等等。</p>
<h2 id="结果图-1"><a href="#结果图-1" class="headerlink" title="结果图"></a>结果图</h2><p><img src="https://img-blog.csdnimg.cn/654a986b79574c958616df55db71b11e.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5pivWXXmrLg=,size_20,color_FFFFFF,t_70,g_se,x_16" alt=""><br><img src="https://img-blog.csdnimg.cn/9245a6b22a634593b93e91170073d171.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5pivWXXmrLg=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<h1 id="进阶版"><a href="#进阶版" class="headerlink" title="进阶版"></a>进阶版</h1><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>1、git clone <a href="https://github.com/tfx2001/python-turtle-draw-svg.git">https://github.com/tfx2001/python-turtle-draw-svg.git</a><br>2、安装potrace，参考：<a href="https://pypi.org/project/pypotrace/">https://pypi.org/project/pypotrace/</a><br>3、利用requirement.txt安装依赖库：<a href="https://mp.csdn.net/postedit/103198577">https://mp.csdn.net/postedit/103198577</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-i https://pypi.org/simple</span><br><span class="line">beautifulsoup4==4.6.0</span><br><span class="line">lxml==4.2.1</span><br><span class="line">numpy==1.14.5</span><br><span class="line">opencv-python==3.4.1.15</span><br><span class="line">pywin32==223</span><br></pre></td></tr></table></figure>
<p>注：在安装国外库报错Read timed out时，可以通过以下方式解决：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip --default-timeout=100000 install -U +库名</span><br></pre></td></tr></table></figure>
<p><strong>更换国内安装源</strong>和<strong>设置超时时间</strong>。在<code>pip install XXX</code>命令的后面加上</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">--default-timeout=100000 -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/835499df819c43389164b1b964a3c5a3.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5pivWXXmrLg=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<p>4、测试执行：python main.py -c=32 60960684_p0.png，有用虚拟环境的需切换到虚拟环境后执行前面命令</p>
<h2 id="实现思路"><a href="#实现思路" class="headerlink" title="实现思路"></a>实现思路</h2><p>1、通过opencv图像识别，把png、jpg图片矢量化，转化成SVG格式<br>2、通过SVG格式知道图画的边界，通过turtle按一定速度沿边界移动，以得到自动作画的效果<br>3、做完边界后，把每个区域颜色填充，这样一幅画就画好了</p>
<h2 id="代码分解-1"><a href="#代码分解-1" class="headerlink" title="代码分解"></a>代码分解</h2><p>由于图片的颜色比较多，因此作者通过opencv对图像先做聚类，用更少颜色去表示更多颜色</p>
<p>通过opencv读入图片：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">bitmap = cv2.imread(args.filename)</span><br><span class="line">drawBitmap(bitmap)</span><br></pre></td></tr></table></figure>
<p>通过opencv对图片做颜色聚类&amp;Potrace对图片做矢量图转化：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">drawBitmap</span>(<span class="params">w_image</span>):</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Reducing the colors...&#x27;</span>)</span><br><span class="line">    Z = w_image.reshape((-<span class="number">1</span>, <span class="number">3</span>))</span><br><span class="line"> </span><br><span class="line">    <span class="comment"># convert to np.float32</span></span><br><span class="line">    Z = np.float32(Z)</span><br><span class="line"> </span><br><span class="line">    <span class="comment"># define criteria, number of clusters(K) and apply kmeans()</span></span><br><span class="line">    criteria = (cv2.TERM_CRITERIA_EPS, <span class="number">10</span>, <span class="number">1.0</span>)</span><br><span class="line">    <span class="keyword">global</span> K</span><br><span class="line">    ret, label, center = cv2.kmeans(</span><br><span class="line">        Z, K, <span class="literal">None</span>, criteria, <span class="number">10</span>, cv2.KMEANS_RANDOM_CENTERS)</span><br><span class="line"> </span><br><span class="line">    <span class="comment"># Now convert back into uint8, and make original image</span></span><br><span class="line">    center = np.uint8(center)</span><br><span class="line">    <span class="built_in">print</span>(center)</span><br><span class="line">    res = center[label.flatten()]</span><br><span class="line">    res = res.reshape(w_image.shape)</span><br><span class="line">    no = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> center:</span><br><span class="line">        sys.stdout.write(<span class="string">&#x27;\rDrawing: %.2f%% [&#x27;</span> % (</span><br><span class="line">            no / K * <span class="number">100</span>) + <span class="string">&#x27;#&#x27;</span> * no + <span class="string">&#x27; &#x27;</span> * (K - no) + <span class="string">&#x27;]&#x27;</span>)</span><br><span class="line">        no += <span class="number">1</span></span><br><span class="line">        res2 = cv2.inRange(res, i, i)</span><br><span class="line">        res2 = cv2.bitwise_not(res2)</span><br><span class="line">        <span class="comment">#print(i)</span></span><br><span class="line">        res2 = res</span><br><span class="line">        cv2.imwrite(<span class="string">&#x27;.tmp.bmp&#x27;</span>, res2)</span><br><span class="line">        os.system(<span class="string">&#x27;potrace .tmp.bmp -s --flat&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(i)</span><br><span class="line">        drawSVG(<span class="string">&#x27;.tmp.svg&#x27;</span>, <span class="string">&#x27;#%02x%02x%02x&#x27;</span> % (i[<span class="number">2</span>], i[<span class="number">1</span>], i[<span class="number">0</span>]))</span><br><span class="line">    <span class="comment">#os.remove(&#x27;.tmp.bmp&#x27;)</span></span><br><span class="line">    <span class="comment">#os.remove(&#x27;.tmp.svg&#x27;)</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;\n\rFinished, close the window to exit.&#x27;</span>)</span><br><span class="line">    te.done()</span><br></pre></td></tr></table></figure>
<p>按矢量图轨迹作画，利用了python turtle库：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">drawSVG</span>(<span class="params">filename, w_color</span>):</span></span><br><span class="line">    <span class="keyword">global</span> first</span><br><span class="line">    SVGFile = <span class="built_in">open</span>(filename, <span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">    SVG = BeautifulSoup(SVGFile.read(), <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line">    Height = <span class="built_in">float</span>(SVG.svg.attrs[<span class="string">&#x27;height&#x27;</span>][<span class="number">0</span>: -<span class="number">2</span>])</span><br><span class="line">    Width = <span class="built_in">float</span>(SVG.svg.attrs[<span class="string">&#x27;width&#x27;</span>][<span class="number">0</span>: -<span class="number">2</span>])</span><br><span class="line">    transform(SVG.g.attrs[<span class="string">&#x27;transform&#x27;</span>])</span><br><span class="line">    <span class="keyword">if</span> first:</span><br><span class="line">        te.setup(height=Height, width=Width)</span><br><span class="line">        te.setworldcoordinates(-Width / <span class="number">2</span>, <span class="number">300</span>, Width -</span><br><span class="line">                               Width / <span class="number">2</span>, -Height + <span class="number">300</span>)</span><br><span class="line">        first = <span class="literal">False</span></span><br><span class="line">    te.tracer(<span class="number">100</span>)</span><br><span class="line">    te.pensize(<span class="number">1</span>)</span><br><span class="line">    te.speed(Speed)</span><br><span class="line">    te.penup()</span><br><span class="line">    te.color(w_color)</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> SVG.find_all(<span class="string">&#x27;path&#x27;</span>):</span><br><span class="line">        attr = i.attrs[<span class="string">&#x27;d&#x27;</span>].replace(<span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">        f = readPathAttrD(attr)</span><br><span class="line">        lastI = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> f:</span><br><span class="line">            <span class="keyword">if</span> i == <span class="string">&#x27;M&#x27;</span>:</span><br><span class="line">                te.end_fill()</span><br><span class="line">                Moveto(<span class="built_in">next</span>(f) * scale[<span class="number">0</span>], <span class="built_in">next</span>(f) * scale[<span class="number">1</span>])</span><br><span class="line">                te.begin_fill()</span><br><span class="line">            <span class="keyword">elif</span> i == <span class="string">&#x27;m&#x27;</span>:</span><br><span class="line">                te.end_fill()</span><br><span class="line">                Moveto_r(<span class="built_in">next</span>(f) * scale[<span class="number">0</span>], <span class="built_in">next</span>(f) * scale[<span class="number">1</span>])</span><br><span class="line">                te.begin_fill()</span><br><span class="line">            <span class="keyword">elif</span> i == <span class="string">&#x27;C&#x27;</span>:</span><br><span class="line">                Curveto(<span class="built_in">next</span>(f) * scale[<span class="number">0</span>], <span class="built_in">next</span>(f) * scale[<span class="number">1</span>],</span><br><span class="line">                        <span class="built_in">next</span>(f) * scale[<span class="number">0</span>], <span class="built_in">next</span>(f) * scale[<span class="number">1</span>],</span><br><span class="line">                        <span class="built_in">next</span>(f) * scale[<span class="number">0</span>], <span class="built_in">next</span>(f) * scale[<span class="number">1</span>])</span><br><span class="line">                lastI = i</span><br><span class="line">            <span class="keyword">elif</span> i == <span class="string">&#x27;c&#x27;</span>:</span><br><span class="line">                Curveto_r(<span class="built_in">next</span>(f) * scale[<span class="number">0</span>], <span class="built_in">next</span>(f) * scale[<span class="number">1</span>],</span><br><span class="line">                          <span class="built_in">next</span>(f) * scale[<span class="number">0</span>], <span class="built_in">next</span>(f) * scale[<span class="number">1</span>],</span><br><span class="line">                          <span class="built_in">next</span>(f) * scale[<span class="number">0</span>], <span class="built_in">next</span>(f) * scale[<span class="number">1</span>])</span><br><span class="line">                lastI = i</span><br><span class="line">            <span class="keyword">elif</span> i == <span class="string">&#x27;L&#x27;</span>:</span><br><span class="line">                Lineto(<span class="built_in">next</span>(f) * scale[<span class="number">0</span>], <span class="built_in">next</span>(f) * scale[<span class="number">1</span>])</span><br><span class="line">            <span class="keyword">elif</span> i == <span class="string">&#x27;l&#x27;</span>:</span><br><span class="line">                Lineto_r(<span class="built_in">next</span>(f) * scale[<span class="number">0</span>], <span class="built_in">next</span>(f) * scale[<span class="number">1</span>])</span><br><span class="line">                lastI = i</span><br><span class="line">            <span class="keyword">elif</span> lastI == <span class="string">&#x27;C&#x27;</span>:</span><br><span class="line">                Curveto(i * scale[<span class="number">0</span>], <span class="built_in">next</span>(f) * scale[<span class="number">1</span>],</span><br><span class="line">                        <span class="built_in">next</span>(f) * scale[<span class="number">0</span>], <span class="built_in">next</span>(f) * scale[<span class="number">1</span>],</span><br><span class="line">                        <span class="built_in">next</span>(f) * scale[<span class="number">0</span>], <span class="built_in">next</span>(f) * scale[<span class="number">1</span>])</span><br><span class="line">            <span class="keyword">elif</span> lastI == <span class="string">&#x27;c&#x27;</span>:</span><br><span class="line">                Curveto_r(i * scale[<span class="number">0</span>], <span class="built_in">next</span>(f) * scale[<span class="number">1</span>],</span><br><span class="line">                          <span class="built_in">next</span>(f) * scale[<span class="number">0</span>], <span class="built_in">next</span>(f) * scale[<span class="number">1</span>],</span><br><span class="line">                          <span class="built_in">next</span>(f) * scale[<span class="number">0</span>], <span class="built_in">next</span>(f) * scale[<span class="number">1</span>])</span><br><span class="line">            <span class="keyword">elif</span> lastI == <span class="string">&#x27;L&#x27;</span>:</span><br><span class="line">                Lineto(i * scale[<span class="number">0</span>], <span class="built_in">next</span>(f) * scale[<span class="number">1</span>])</span><br><span class="line">            <span class="keyword">elif</span> lastI == <span class="string">&#x27;l&#x27;</span>:</span><br><span class="line">                Lineto_r(i * scale[<span class="number">0</span>], <span class="built_in">next</span>(f) * scale[<span class="number">1</span>])</span><br><span class="line">    te.penup()</span><br><span class="line">    te.hideturtle()</span><br><span class="line">    te.update()</span><br><span class="line">    SVGFile.close()</span><br></pre></td></tr></table></figure>
<h2 id="全部代码-1"><a href="#全部代码-1" class="headerlink" title="全部代码"></a>全部代码</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: tfx2001</span></span><br><span class="line"><span class="comment"># License: GNU GPLv3</span></span><br><span class="line"><span class="comment"># Time: 2018-08-09 18:27</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> turtle <span class="keyword">as</span> te</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"> </span><br><span class="line">WriteStep = <span class="number">15</span>  <span class="comment"># 贝塞尔函数的取样次数</span></span><br><span class="line">Speed = <span class="number">1000</span></span><br><span class="line">Width = <span class="number">600</span>  <span class="comment"># 界面宽度</span></span><br><span class="line">Height = <span class="number">600</span>  <span class="comment"># 界面高度</span></span><br><span class="line">Xh = <span class="number">0</span>  <span class="comment"># 记录前一个贝塞尔函数的手柄</span></span><br><span class="line">Yh = <span class="number">0</span></span><br><span class="line">scale = (<span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">first = <span class="literal">True</span></span><br><span class="line">K = <span class="number">32</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Bezier</span>(<span class="params">p1, p2, t</span>):</span>  <span class="comment"># 一阶贝塞尔函数</span></span><br><span class="line">    <span class="keyword">return</span> p1 * (<span class="number">1</span> - t) + p2 * t</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Bezier_2</span>(<span class="params">x1, y1, x2, y2, x3, y3</span>):</span>  <span class="comment"># 二阶贝塞尔函数</span></span><br><span class="line">    te.goto(x1, y1)</span><br><span class="line">    te.pendown()</span><br><span class="line">    <span class="keyword">for</span> t <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, WriteStep + <span class="number">1</span>):</span><br><span class="line">        x = Bezier(Bezier(x1, x2, t / WriteStep),</span><br><span class="line">                   Bezier(x2, x3, t / WriteStep), t / WriteStep)</span><br><span class="line">        y = Bezier(Bezier(y1, y2, t / WriteStep),</span><br><span class="line">                   Bezier(y2, y3, t / WriteStep), t / WriteStep)</span><br><span class="line">        te.goto(x, y)</span><br><span class="line">    te.penup()</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Bezier_3</span>(<span class="params">x1, y1, x2, y2, x3, y3, x4, y4</span>):</span>  <span class="comment"># 三阶贝塞尔函数</span></span><br><span class="line">    x1 = -Width / <span class="number">2</span> + x1</span><br><span class="line">    y1 = Height / <span class="number">2</span> - y1</span><br><span class="line">    x2 = -Width / <span class="number">2</span> + x2</span><br><span class="line">    y2 = Height / <span class="number">2</span> - y2</span><br><span class="line">    x3 = -Width / <span class="number">2</span> + x3</span><br><span class="line">    y3 = Height / <span class="number">2</span> - y3</span><br><span class="line">    x4 = -Width / <span class="number">2</span> + x4</span><br><span class="line">    y4 = Height / <span class="number">2</span> - y4  <span class="comment"># 坐标变换</span></span><br><span class="line">    te.goto(x1, y1)</span><br><span class="line">    te.pendown()</span><br><span class="line">    <span class="keyword">for</span> t <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, WriteStep + <span class="number">1</span>):</span><br><span class="line">        x = Bezier(Bezier(Bezier(x1, x2, t / WriteStep), Bezier(x2, x3, t / WriteStep), t / WriteStep),</span><br><span class="line">                   Bezier(Bezier(x2, x3, t / WriteStep), Bezier(x3, x4, t / WriteStep), t / WriteStep), t / WriteStep)</span><br><span class="line">        y = Bezier(Bezier(Bezier(y1, y2, t / WriteStep), Bezier(y2, y3, t / WriteStep), t / WriteStep),</span><br><span class="line">                   Bezier(Bezier(y2, y3, t / WriteStep), Bezier(y3, y4, t / WriteStep), t / WriteStep), t / WriteStep)</span><br><span class="line">        te.goto(x, y)</span><br><span class="line">    te.penup()</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Moveto</span>(<span class="params">x, y</span>):</span>  <span class="comment"># 移动到svg坐标下（x，y）</span></span><br><span class="line">    te.penup()</span><br><span class="line">    te.goto(-Width / <span class="number">2</span> + x, Height / <span class="number">2</span> - y)</span><br><span class="line">    te.pendown()</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Moveto_r</span>(<span class="params">dx, dy</span>):</span></span><br><span class="line">    te.penup()</span><br><span class="line">    te.goto(te.xcor() + dx, te.ycor() - dy)</span><br><span class="line">    te.pendown()</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">line</span>(<span class="params">x1, y1, x2, y2</span>):</span>  <span class="comment"># 连接svg坐标下两点</span></span><br><span class="line">    te.penup()</span><br><span class="line">    te.goto(-Width / <span class="number">2</span> + x1, Height / <span class="number">2</span> - y1)</span><br><span class="line">    te.pendown()</span><br><span class="line">    te.goto(-Width / <span class="number">2</span> + x2, Height / <span class="number">2</span> - y2)</span><br><span class="line">    te.penup()</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Lineto_r</span>(<span class="params">dx, dy</span>):</span>  <span class="comment"># 连接当前点和相对坐标（dx，dy）的点</span></span><br><span class="line">    te.pendown()</span><br><span class="line">    te.goto(te.xcor() + dx, te.ycor() - dy)</span><br><span class="line">    te.penup()</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Lineto</span>(<span class="params">x, y</span>):</span>  <span class="comment"># 连接当前点和svg坐标下（x，y）</span></span><br><span class="line">    te.pendown()</span><br><span class="line">    te.goto(-Width / <span class="number">2</span> + x, Height / <span class="number">2</span> - y)</span><br><span class="line">    te.penup()</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Curveto</span>(<span class="params">x1, y1, x2, y2, x, y</span>):</span>  <span class="comment"># 三阶贝塞尔曲线到（x，y）</span></span><br><span class="line">    te.penup()</span><br><span class="line">    X_now = te.xcor() + Width / <span class="number">2</span></span><br><span class="line">    Y_now = Height / <span class="number">2</span> - te.ycor()</span><br><span class="line">    Bezier_3(X_now, Y_now, x1, y1, x2, y2, x, y)</span><br><span class="line">    <span class="keyword">global</span> Xh</span><br><span class="line">    <span class="keyword">global</span> Yh</span><br><span class="line">    Xh = x - x2</span><br><span class="line">    Yh = y - y2</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Curveto_r</span>(<span class="params">x1, y1, x2, y2, x, y</span>):</span>  <span class="comment"># 三阶贝塞尔曲线到相对坐标（x，y）</span></span><br><span class="line">    te.penup()</span><br><span class="line">    X_now = te.xcor() + Width / <span class="number">2</span></span><br><span class="line">    Y_now = Height / <span class="number">2</span> - te.ycor()</span><br><span class="line">    Bezier_3(X_now, Y_now, X_now + x1, Y_now + y1,</span><br><span class="line">             X_now + x2, Y_now + y2, X_now + x, Y_now + y)</span><br><span class="line">    <span class="keyword">global</span> Xh</span><br><span class="line">    <span class="keyword">global</span> Yh</span><br><span class="line">    Xh = x - x2</span><br><span class="line">    Yh = y - y2</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">transform</span>(<span class="params">w_attr</span>):</span></span><br><span class="line">    funcs = w_attr.split(<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> func <span class="keyword">in</span> funcs:</span><br><span class="line">        func_name = func[<span class="number">0</span>: func.find(<span class="string">&#x27;(&#x27;</span>)]</span><br><span class="line">        <span class="keyword">if</span> func_name == <span class="string">&#x27;scale&#x27;</span>:</span><br><span class="line">            <span class="keyword">global</span> scale</span><br><span class="line">            scale = (<span class="built_in">float</span>(func[func.find(<span class="string">&#x27;(&#x27;</span>) + <span class="number">1</span>: -<span class="number">1</span>].split(<span class="string">&#x27;,&#x27;</span>)[<span class="number">0</span>]),</span><br><span class="line">                     -<span class="built_in">float</span>(func[func.find(<span class="string">&#x27;(&#x27;</span>) + <span class="number">1</span>: -<span class="number">1</span>].split(<span class="string">&#x27;,&#x27;</span>)[<span class="number">1</span>]))</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">readPathAttrD</span>(<span class="params">w_attr</span>):</span></span><br><span class="line">    ulist = w_attr.split(<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> ulist:</span><br><span class="line">        <span class="comment"># print(&quot;now cmd:&quot;, i)</span></span><br><span class="line">        <span class="keyword">if</span> i.isdigit() <span class="keyword">or</span> i.isalpha():</span><br><span class="line">            <span class="keyword">yield</span> <span class="built_in">float</span>(i)</span><br><span class="line">        <span class="keyword">elif</span> i[<span class="number">0</span>].isalpha():</span><br><span class="line">            <span class="keyword">yield</span> i[<span class="number">0</span>]</span><br><span class="line">            <span class="keyword">yield</span> <span class="built_in">float</span>(i[<span class="number">1</span>:])</span><br><span class="line">        <span class="keyword">elif</span> i[-<span class="number">1</span>].isalpha():</span><br><span class="line">            <span class="keyword">yield</span> <span class="built_in">float</span>(i[<span class="number">0</span>: -<span class="number">1</span>])</span><br><span class="line">        <span class="keyword">elif</span> i[<span class="number">0</span>] == <span class="string">&#x27;-&#x27;</span>:</span><br><span class="line">            <span class="keyword">yield</span> <span class="built_in">float</span>(i)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">drawSVG</span>(<span class="params">filename, w_color</span>):</span></span><br><span class="line">    <span class="keyword">global</span> first</span><br><span class="line">    SVGFile = <span class="built_in">open</span>(filename, <span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">    SVG = BeautifulSoup(SVGFile.read(), <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line">    Height = <span class="built_in">float</span>(SVG.svg.attrs[<span class="string">&#x27;height&#x27;</span>][<span class="number">0</span>: -<span class="number">2</span>])</span><br><span class="line">    Width = <span class="built_in">float</span>(SVG.svg.attrs[<span class="string">&#x27;width&#x27;</span>][<span class="number">0</span>: -<span class="number">2</span>])</span><br><span class="line">    transform(SVG.g.attrs[<span class="string">&#x27;transform&#x27;</span>])</span><br><span class="line">    <span class="keyword">if</span> first:</span><br><span class="line">        te.setup(height=Height, width=Width)</span><br><span class="line">        te.setworldcoordinates(-Width / <span class="number">2</span>, <span class="number">300</span>, Width -</span><br><span class="line">                               Width / <span class="number">2</span>, -Height + <span class="number">300</span>)</span><br><span class="line">        first = <span class="literal">False</span></span><br><span class="line">    te.tracer(<span class="number">100</span>)</span><br><span class="line">    te.pensize(<span class="number">1</span>)</span><br><span class="line">    te.speed(Speed)</span><br><span class="line">    te.penup()</span><br><span class="line">    te.color(w_color)</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> SVG.find_all(<span class="string">&#x27;path&#x27;</span>):</span><br><span class="line">        attr = i.attrs[<span class="string">&#x27;d&#x27;</span>].replace(<span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">        f = readPathAttrD(attr)</span><br><span class="line">        lastI = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> f:</span><br><span class="line">            <span class="keyword">if</span> i == <span class="string">&#x27;M&#x27;</span>:</span><br><span class="line">                te.end_fill()</span><br><span class="line">                Moveto(<span class="built_in">next</span>(f) * scale[<span class="number">0</span>], <span class="built_in">next</span>(f) * scale[<span class="number">1</span>])</span><br><span class="line">                te.begin_fill()</span><br><span class="line">            <span class="keyword">elif</span> i == <span class="string">&#x27;m&#x27;</span>:</span><br><span class="line">                te.end_fill()</span><br><span class="line">                Moveto_r(<span class="built_in">next</span>(f) * scale[<span class="number">0</span>], <span class="built_in">next</span>(f) * scale[<span class="number">1</span>])</span><br><span class="line">                te.begin_fill()</span><br><span class="line">            <span class="keyword">elif</span> i == <span class="string">&#x27;C&#x27;</span>:</span><br><span class="line">                Curveto(<span class="built_in">next</span>(f) * scale[<span class="number">0</span>], <span class="built_in">next</span>(f) * scale[<span class="number">1</span>],</span><br><span class="line">                        <span class="built_in">next</span>(f) * scale[<span class="number">0</span>], <span class="built_in">next</span>(f) * scale[<span class="number">1</span>],</span><br><span class="line">                        <span class="built_in">next</span>(f) * scale[<span class="number">0</span>], <span class="built_in">next</span>(f) * scale[<span class="number">1</span>])</span><br><span class="line">                lastI = i</span><br><span class="line">            <span class="keyword">elif</span> i == <span class="string">&#x27;c&#x27;</span>:</span><br><span class="line">                Curveto_r(<span class="built_in">next</span>(f) * scale[<span class="number">0</span>], <span class="built_in">next</span>(f) * scale[<span class="number">1</span>],</span><br><span class="line">                          <span class="built_in">next</span>(f) * scale[<span class="number">0</span>], <span class="built_in">next</span>(f) * scale[<span class="number">1</span>],</span><br><span class="line">                          <span class="built_in">next</span>(f) * scale[<span class="number">0</span>], <span class="built_in">next</span>(f) * scale[<span class="number">1</span>])</span><br><span class="line">                lastI = i</span><br><span class="line">            <span class="keyword">elif</span> i == <span class="string">&#x27;L&#x27;</span>:</span><br><span class="line">                Lineto(<span class="built_in">next</span>(f) * scale[<span class="number">0</span>], <span class="built_in">next</span>(f) * scale[<span class="number">1</span>])</span><br><span class="line">            <span class="keyword">elif</span> i == <span class="string">&#x27;l&#x27;</span>:</span><br><span class="line">                Lineto_r(<span class="built_in">next</span>(f) * scale[<span class="number">0</span>], <span class="built_in">next</span>(f) * scale[<span class="number">1</span>])</span><br><span class="line">                lastI = i</span><br><span class="line">            <span class="keyword">elif</span> lastI == <span class="string">&#x27;C&#x27;</span>:</span><br><span class="line">                Curveto(i * scale[<span class="number">0</span>], <span class="built_in">next</span>(f) * scale[<span class="number">1</span>],</span><br><span class="line">                        <span class="built_in">next</span>(f) * scale[<span class="number">0</span>], <span class="built_in">next</span>(f) * scale[<span class="number">1</span>],</span><br><span class="line">                        <span class="built_in">next</span>(f) * scale[<span class="number">0</span>], <span class="built_in">next</span>(f) * scale[<span class="number">1</span>])</span><br><span class="line">            <span class="keyword">elif</span> lastI == <span class="string">&#x27;c&#x27;</span>:</span><br><span class="line">                Curveto_r(i * scale[<span class="number">0</span>], <span class="built_in">next</span>(f) * scale[<span class="number">1</span>],</span><br><span class="line">                          <span class="built_in">next</span>(f) * scale[<span class="number">0</span>], <span class="built_in">next</span>(f) * scale[<span class="number">1</span>],</span><br><span class="line">                          <span class="built_in">next</span>(f) * scale[<span class="number">0</span>], <span class="built_in">next</span>(f) * scale[<span class="number">1</span>])</span><br><span class="line">            <span class="keyword">elif</span> lastI == <span class="string">&#x27;L&#x27;</span>:</span><br><span class="line">                Lineto(i * scale[<span class="number">0</span>], <span class="built_in">next</span>(f) * scale[<span class="number">1</span>])</span><br><span class="line">            <span class="keyword">elif</span> lastI == <span class="string">&#x27;l&#x27;</span>:</span><br><span class="line">                Lineto_r(i * scale[<span class="number">0</span>], <span class="built_in">next</span>(f) * scale[<span class="number">1</span>])</span><br><span class="line">    te.penup()</span><br><span class="line">    te.hideturtle()</span><br><span class="line">    te.update()</span><br><span class="line">    SVGFile.close()</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">drawBitmap</span>(<span class="params">w_image</span>):</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Reducing the colors...&#x27;</span>)</span><br><span class="line">    Z = w_image.reshape((-<span class="number">1</span>, <span class="number">3</span>))</span><br><span class="line"> </span><br><span class="line">    <span class="comment"># convert to np.float32</span></span><br><span class="line">    Z = np.float32(Z)</span><br><span class="line"> </span><br><span class="line">    <span class="comment"># define criteria, number of clusters(K) and apply kmeans()</span></span><br><span class="line">    criteria = (cv2.TERM_CRITERIA_EPS, <span class="number">10</span>, <span class="number">1.0</span>)</span><br><span class="line">    <span class="keyword">global</span> K</span><br><span class="line">    ret, label, center = cv2.kmeans(</span><br><span class="line">        Z, K, <span class="literal">None</span>, criteria, <span class="number">10</span>, cv2.KMEANS_RANDOM_CENTERS)</span><br><span class="line"> </span><br><span class="line">    <span class="comment"># Now convert back into uint8, and make original image</span></span><br><span class="line">    center = np.uint8(center)</span><br><span class="line">    <span class="built_in">print</span>(center)</span><br><span class="line">    res = center[label.flatten()]</span><br><span class="line">    res = res.reshape(w_image.shape)</span><br><span class="line">    no = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> center:</span><br><span class="line">        sys.stdout.write(<span class="string">&#x27;\rDrawing: %.2f%% [&#x27;</span> % (</span><br><span class="line">            no / K * <span class="number">100</span>) + <span class="string">&#x27;#&#x27;</span> * no + <span class="string">&#x27; &#x27;</span> * (K - no) + <span class="string">&#x27;]&#x27;</span>)</span><br><span class="line">        no += <span class="number">1</span></span><br><span class="line">        res2 = cv2.inRange(res, i, i)</span><br><span class="line">        res2 = cv2.bitwise_not(res2)</span><br><span class="line">        <span class="comment">#print(i)</span></span><br><span class="line">        res2 = res</span><br><span class="line">        cv2.imwrite(<span class="string">&#x27;.tmp.bmp&#x27;</span>, res2)</span><br><span class="line">        <span class="comment">#转成矢量图，保存成.svg格式</span></span><br><span class="line">        os.system(<span class="string">&#x27;potrace .tmp.bmp -s --flat&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(i)</span><br><span class="line">        drawSVG(<span class="string">&#x27;.tmp.svg&#x27;</span>, <span class="string">&#x27;#%02x%02x%02x&#x27;</span> % (i[<span class="number">2</span>], i[<span class="number">1</span>], i[<span class="number">0</span>]))</span><br><span class="line">    <span class="comment">#os.remove(&#x27;.tmp.bmp&#x27;)</span></span><br><span class="line">    <span class="comment">#os.remove(&#x27;.tmp.svg&#x27;)</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;\n\rFinished, close the window to exit.&#x27;</span>)</span><br><span class="line">    te.done()</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    paser = argparse.ArgumentParser(</span><br><span class="line">        description=<span class="string">&quot;Convert an bitmap to SVG and use turtle libray to draw it.&quot;</span>)</span><br><span class="line">    paser.add_argument(<span class="string">&#x27;filename&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">str</span>,</span><br><span class="line">                       <span class="built_in">help</span>=<span class="string">&#x27;The file(*.jpg, *.png, *.bmp) name of the file you want to convert.&#x27;</span>)</span><br><span class="line">    paser.add_argument(</span><br><span class="line">        <span class="string">&quot;-c&quot;</span>, <span class="string">&quot;--color&quot;</span>, <span class="built_in">help</span>=<span class="string">&quot;How many colors you want to draw.(If the number is too large that the program may be very slow.)&quot;</span>, <span class="built_in">type</span>=<span class="built_in">int</span>, default=<span class="number">32</span>)</span><br><span class="line">    args = paser.parse_args()</span><br><span class="line">    K = args.color</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        bitmapFile = <span class="built_in">open</span>(args.filename, mode=<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">    <span class="keyword">except</span> FileNotFoundError:</span><br><span class="line">        <span class="built_in">print</span>(__file__ + <span class="string">&#x27;: error: The file is not exists.&#x27;</span>)</span><br><span class="line">        quit()</span><br><span class="line">    <span class="keyword">if</span> os.path.splitext(args.filename)[<span class="number">1</span>].lower() <span class="keyword">not</span> <span class="keyword">in</span> [<span class="string">&#x27;.jpg&#x27;</span>, <span class="string">&#x27;.bmp&#x27;</span>, <span class="string">&#x27;.png&#x27;</span>]:</span><br><span class="line">        <span class="built_in">print</span>(__file__ + <span class="string">&#x27;: error: The file is not a bitmap file.&#x27;</span>)</span><br><span class="line">        quit()</span><br><span class="line">    bitmap = cv2.imread(args.filename)</span><br><span class="line">    <span class="comment">#if bitmap.shape[0] &gt; 240:</span></span><br><span class="line">    <span class="comment">#    bitmap = cv2.resize(bitmap,(500,200))</span></span><br><span class="line">    <span class="comment">#    bitmap = cv2.resize(bitmap, (int(bitmap.shape[1] * (</span></span><br><span class="line">    <span class="comment">#        (80 - 50) / bitmap.shape[0])), 80 - 50))</span></span><br><span class="line">    <span class="comment">#print(bitmap.shape[1])</span></span><br><span class="line">    drawBitmap(bitmap)</span><br></pre></td></tr></table></figure>
<h1 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h1><p>参考：「涂寐」<a href="https://blog.csdn.net/weixin_46318141/article/details/122841674">https://blog.csdn.net/weixin_46318141/article/details/122841674</a></p>
<p>参考：「林雪飞」<a href="https://blog.csdn.net/qq_39096769/article/details/105212737">https://blog.csdn.net/qq_39096769/article/details/105212737</a></p>
<p>参考：「远洋之帆」<a href="https://blog.csdn.net/liangwqi/article/details/103201455">https://blog.csdn.net/liangwqi/article/details/103201455</a></p>
<p>视频地址：<a href="https://www.bilibili.com/video/av20349733?share_medium=android&amp;share_source=copy_link&amp;bbid=37902872-DA4A-4D5D-878B-AEE788048F4217066infoc&amp;ts=1533854267282">https://www.bilibili.com/video/av20349733?share_medium=android&amp;share_source=copy_link&amp;bbid=37902872-DA4A-4D5D-878B-AEE788048F4217066infoc&amp;ts=1533854267282</a></p>
]]></content>
  </entry>
  <entry>
    <title>开发中遇到问题如何更好地提问</title>
    <url>/2020/07/05/%E5%BC%80%E5%8F%91%E4%B8%AD%E9%81%87%E5%88%B0%E9%97%AE%E9%A2%98%E5%A6%82%E4%BD%95%E6%9B%B4%E5%A5%BD%E5%9C%B0%E6%8F%90%E9%97%AE/</url>
    <content><![CDATA[<p>开发过程中遇到问题提问，让他人快速理解你的问题、同时如何在提问中学习成长<br>相关阅读链接: <a href="http://www.catb.org/~esr/faqs/smart-questions.html">How To Ask Questions The Smart Way</a></p>
 <span id="more"></span>
<h3 id="①Before-You-Ask"><a href="#①Before-You-Ask" class="headerlink" title="①Before You Ask"></a>①Before You Ask</h3><p>Before asking a technical question by e-mail, or in a newsgroup, or on a website chat board, do the following:<br>1.Try to find an answer by searching the archives of the forum or mailing list you plan to post to.<br>2.Try to find an answer by searching the Web.<br>3.Try to find an answer by reading the manual.<br>4.Try to find an answer by reading a FAQ.<br>5.Try to find an answer by inspection or experimentation.<br>6.Try to find an answer by asking a skilled friend.<br>7.If you’re a programmer, try to find an answer by reading the source code.</p>
<h3 id="②Stack-Overflow"><a href="#②Stack-Overflow" class="headerlink" title="②Stack Overflow"></a>②Stack Overflow</h3><p>Search, then ask on Stack Exchange<br>Start with a Google search，the Stack Exchange sites are often near the top of the search results.<br>  If you didn’t find anything through Google, search again on the specific site most relevant to your question (see below). Searching with tags can help narrow down the results.<br>If you still didn’t find anything, post your question on the one site where it’s most on-topic.<br>add tags that are related to the substance of your question (particularly the name of the programming language, operating system, or library you’re having trouble with). </p>
<h3 id="③Be-precise-and-informative-about-your-problem"><a href="#③Be-precise-and-informative-about-your-problem" class="headerlink" title="③Be precise and informative about your problem"></a>③Be precise and informative about your problem</h3><p>1.Describe the symptoms of your problem or bug carefully and clearly.<br>2.Describe the environment in which it occurs (machine, OS, application, whatever). Provide your vendor’s distribution and release level (e.g.: “Fedora Core 7”, “Slackware 9.1”, etc.).<br>3.Describe the research you did to try the problem before you asked the question.<br>4.Describe the diagnostic steps you took to try and pin down the problem yourself.<br>5.Describe any possibly relevant recent changes in your computer or software configuration.<br>If at all possible, provide a way to reproduce the problem in a controlled environment.</p>
<h3 id="④Describe-the-problem’s-symptoms-not-your-guesses"><a href="#④Describe-the-problem’s-symptoms-not-your-guesses" class="headerlink" title="④Describe the problem’s symptoms, not your guesses"></a>④Describe the problem’s symptoms, not your guesses</h3><p>If you feel it’s important to state your guess, clearly label it as such and describe why that answer isn’t working for you.<br>Example：<br>I’m getting back-to-back SIG11 errors on kernel compiles, and suspect a hairline crack on one of the motherboard traces. What’s the best way to check for those?<br>Smarter:<br>My home-built K6/233 on an FIC-PA2007 motherboard (VIA Apollo VP2 chipset) with 256MB Corsair PC133 SDRAM starts getting frequent SIG11 errors about 20 minutes after power-on during the course of kernel compiles, but never in the first 20 minutes. Rebooting doesn’t restart the clock, but powering down overnight does. Swapping out all RAM didn’t help. The relevant part of a typical compile session log follows.</p>
<h3 id="⑤Describe-your-problem’s-symptoms-in-chronological-order"><a href="#⑤Describe-your-problem’s-symptoms-in-chronological-order" class="headerlink" title="⑤Describe your problem’s symptoms in chronological order"></a>⑤Describe your problem’s symptoms in chronological order</h3><p>The clues most useful in figuring out something that went wrong often lie in the events immediately prior. So, your account should describe precisely what you did, and what the machine and software did, leading up to the blowup. In the case of command-line processes, having a session log (e.g., using the script utility) and quoting the relevant twenty or so lines is very useful.<br>If the program that blew up on you has diagnostic options (such as -v for verbose), try to select options that will add useful debugging information to the transcript. try to choose a debug level that will inform rather than drowning the reader in junk.<br>If your account ends up being long (more than about four paragraphs), it might be useful to succinctly state the problem up top, then follow with the chronological tale. </p>
<h3 id="⑥Describe-the-goal-not-the-step"><a href="#⑥Describe-the-goal-not-the-step" class="headerlink" title="⑥Describe the goal, not the step"></a>⑥Describe the goal, not the step</h3><p>If you are trying to find out how to do something (as opposed to reporting a bug), begin by describing the goal. Only then describe the particular step towards it that you are blocked on.<br>Example：<br>How do I get the color-picker on the FooDraw program to take a hexadecimal RGB value?<br>Smarter:<br>I’m trying to replace the color table on an image with values of my choosing. Right now the only way I can see to do this is by editing each table slot, but I can’t get FooDraw’s color picker to take a hexadecimal RGB value.<br>The second version allows an answer that suggests a tool better suited to the task.</p>
<h3 id="中文翻译（部分更改）"><a href="#中文翻译（部分更改）" class="headerlink" title="中文翻译（部分更改）"></a>中文翻译（部分更改）</h3><p>①在问之前</p>
<p>在通过电子邮件、新闻组或网站聊天板询问技术问题之前，请执行以下操作:</p>
<p>1.通过搜索论坛的档案或计划发布到的邮件列表来找到答案。</p>
<p>2.在网上搜索答案。</p>
<p>3.通过阅读手册找到答案。</p>
<p>4.通过阅读常见问题来找到答案。</p>
<p>5.通过观察或实验找到答案。</p>
<p>6.向一个有经验的朋友寻求答案。</p>
<p>7.如果您是一名程序员，请尝试通过阅读源代码来找到答案。</p>
<p>②Stack Overflow(CSDN)</p>
<p>搜索，然后询问Stack Overflow（全球IT界最受欢迎的技术问答网站）。或者CSDN（对于初学者来说足够了)。</p>
<p>百度搜索时，CSDN相关问题的站点通常位于搜索结果的顶部。</p>
<p>如果没有通过百度找到想要的东西，再次搜索与你的问题最相关的特定网站。使用标签搜索可以帮助缩小搜索结果的范围。</p>
<p>如果仍然没有找到任何东西，把问题贴在最热门的网站上。</p>
<p>添加与问题的实质相关的标记(特别是编程语言、操作系统或有问题的库的名称)。</p>
<p>③精确描述关于你的问题</p>
<p>1.仔细清楚地描述问题或bug的症状。</p>
<p>2.描述它发生的环境(机器、操作系统、应用程序等)。提供你的供应商的发行和发布级别(例如:“Fedora Core 7”，“Slackware 9.1”等等)。</p>
<p>3.描述在你问这个问题之前，你为解决这个问题所做的研究。</p>
<p>4.描述一下你自己试图确定问题的诊断步骤。</p>
<p>5.请描述您的计算机或软件配置中最近可能发生的任何相关更改。</p>
<p>如果可能的话，提供一种在受控环境中重现问题的方法。</p>
<p>④描述问题的症状,而不是你的猜测</p>
<p>如果你觉得说出你的猜测很重要，就清楚地把它标出来，并说明为什么这个答案对你不合适。</p>
<p>例子:</p>
<p>我在内核编译中遇到了连续的SIG11错误，并怀疑在一个主板跟踪中出现了细微的裂纹。检查这些的最好方法是什么?</p>
<p>更好的表达:</p>
<p>我在一个ficc - pa2007主板(通过Apollo VP2芯片组)上自制的K6/233具有256MB的Corsair PC133 SDRAM，在内核编译过程中，在开机大约20分钟后开始频繁地出现SIG11错误，但在最初的20分钟内从未出现过。重启不会重启时钟，但夜间关机会。换出所有内存没有帮助。下面是典型编译会话日志的相关部分。</p>
<p>⑤按时间顺序描述你的问题的症状</p>
<p>最有用的线索往往是在事件发生之前。所以，你的账户应该准确地描述你做了什么，以及机器和软件做了什么，从而导致爆炸。对于命令行进程，使用会话日志(例如使用脚本工具)并引用相关的20行左右是非常有用的。</p>
<p>如果发生故障的程序具有诊断选项(例如-v表示verbose)，请尝试选择将有用的调试信息添加到记录的选项。试着选择一个能够通知读者的调试级别，而不是让读者陷入垃圾中。</p>
<p>如果你的叙述很长(超过四段)，那么在最上面简明地陈述问题，然后按照时间顺序叙述可能会很有用。</p>
<p>⑥描述的目标,而不是步骤</p>
<p>如果您试图找出如何做某事(与报告错误相反)，那么从描述目标开始。只有这样，你才能描述你被阻止的具体步骤。</p>
<p>例子:</p>
<p>我如何让颜色选择器在FooDraw程序采取一个十六进制RGB值?</p>
<p>更好的表达:</p>
<p>我试图用我选择的值替换图像上的颜色表。现在我能看到的唯一的方法是编辑每个表槽，但是我不能让FooDraw的颜色选择器取一个十六进制的RGB值。</p>
<p>第二个版本给出的答案是一种更适合这项任务的工具。</p>
]]></content>
      <categories>
        <category>复盘</category>
      </categories>
      <tags>
        <tag>其他</tag>
      </tags>
  </entry>
  <entry>
    <title>数据库入门</title>
    <url>/2020/10/19/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<p>数据库基础</p>
 <span id="more"></span>
<h1 id="数据库基础"><a href="#数据库基础" class="headerlink" title="数据库基础"></a>数据库基础</h1><h2 id="数据库简单介绍"><a href="#数据库简单介绍" class="headerlink" title="数据库简单介绍"></a>数据库简单介绍</h2><p>早期数据库：层次数据库、网络数据库<br>目前：关系型数据库（MySQL）<br>存在编程接口，通过软件自动化处理数据<br>先学习SQL（基本操作接口，API），再学其他软件<br>增删改查<br>MySQL官网：下载DOWNLOAD、文档DOCUMENATION、<br>错误百度（mysql 1045：登录权限问题）<br>Navicat15，破解版，百度破解文档<br>SQLite（羽毛），MySQL（海豚）</p>
<h2 id="Navicat基本操作"><a href="#Navicat基本操作" class="headerlink" title="Navicat基本操作"></a>Navicat基本操作</h2><h3 id="新建数据库"><a href="#新建数据库" class="headerlink" title="新建数据库"></a>新建数据库</h3><p><img src="https://img-blog.csdnimg.cn/2020101911200839.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dUWXVvbmc=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>utf8mb4（比utf8更广）<br>_general_ci</p>
<h3 id="常规操作"><a href="#常规操作" class="headerlink" title="常规操作"></a>常规操作</h3><p><img src="https://img-blog.csdnimg.cn/20201019112303360.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dUWXVvbmc=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201019112311452.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dUWXVvbmc=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h3 id="用户"><a href="#用户" class="headerlink" title="用户"></a>用户</h3><p>%全部用户<br>右键，全部授予</p>
<h2 id="基本语句"><a href="#基本语句" class="headerlink" title="基本语句"></a>基本语句</h2><p>封装的好处：<br>可以在不同的底层数据库中执行</p>
<h2 id="学习思路"><a href="#学习思路" class="headerlink" title="学习思路"></a>学习思路</h2><p>学习设计和创建数据库<br>大量时间去实践，看得舒服，用的方便</p>
<p>先结合实例，模仿思路</p>
]]></content>
      <categories>
        <category>基础</category>
      </categories>
      <tags>
        <tag>数据库</tag>
        <tag>Navicat</tag>
        <tag>MySql</tag>
      </tags>
  </entry>
</search>
